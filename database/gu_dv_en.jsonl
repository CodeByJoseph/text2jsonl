{"section": 1, "heading": "About the syllabus", "content": "About the syllabus diary number GU 2024/2323 The entry into force date 2025-09-15 The decision date 2025-01-21 applies from the semester of the spring term 2026 decision makers Department of Data and Information Technology", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Eligibility requirements", "content": "Eligibility requirements In order to be eligible for the course, the student must be approved in: Introduction to functional programming Object -oriented programming and design", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Content", "content": "Content the course is designed to give students basic knowledge and practical experience in professional software development.It introduces a simple, test -driven development process with a focus on iterative development.Central concepts include analysis, requirements, specification, design, domain modeling, version control and continuous integration.In addition, design principles such as testability, handling of dependencies, division and more, which provides a base for software development.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "CASE", "content": "Objectives after an approved course should be able to: Knowledge and understanding describe basic concepts in software development, such as requirements and development process.Describe working methodology in technical development projects, especially software projects.Skills and ability to carry out a smaller software project with functional programming in groups according to a fixed development process and schedule.Document the project work in the form of a basic requirement specification, and a simpler design document.Apply skills from previous programming courses in a project -like environment.Using modern software development tools such as test framework, Build Automation, continuous integration and version management system.Plan and make an oral presentation with a professional and academic approach valuation and approach reflect on good design and implementation in the project.Reflect on different parts of a software development work: problem identification, problem formulation, specification, design, implementation, testing, etc.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Forms of teaching", "content": "Forms for teaching a small number of lectures and some workshops.At the same time, students in a group are conducting a complete development project in the form of a smaller software project.The project includes compulsory weekly wrist meetings and an oral final presentation.Language language: Swedish and English occur.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Examination forms", "content": "Examination forms The course is examined through oral presentation and demonstration, submission of programming projects (in the form of program code) and a final report describing the project specification and design.The group will also conduct a collegial review of another group's project.If a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such a request must be approved if there are no special reasons, however (Chapter 6, Section 22 HF).If a student has been notified of educational support from the University of Gothenburg with a recommendation on adapted examination and/or adapted examination form, the examiner, in case it is compatible with the course's learning objectives and provided that unreasonable resources are required, decide to grant the student adapted examination and/or adapted examination form.If a course has been discontinued or undergone a major change, the student must be offered at least two examinations, in addition to the regular examination.These occasions are distributed for a period of at least one year, but for a maximum of two years after the course has been discontinued/changed.Regarding internship and operational education (VFU), the corresponding applies, but with limitation to only an additional examination.If a student has been told that he meets the requirements for being a student at the National University (RiU student), the examiner has the right to decide on adaptation in examination, if this is done in accordance with local rules regarding Riu students at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Rating", "content": "Rating sub -courses Project, 7.5 credits rating scale: Very well approved (5), well approved (4), approved (3) and failed (U) on the course is given some of the grades very well approved (5), well approved (4), approved (3) and Fail (U).The project work is graded based on several parts (product, process, and presentation) and is then adjusted for each individual group member based on the individual effort.The grading criteria on different aspects (for example quality, functionality, design, etc.) and how they are weighed together in the grade is in course PM.To be approved for the course is required: Approved individual contribution to the project Participation in weekly wrist meetings Participation in the course's compulsory presentations submission of the course's compulsory reports to obtain at least grade 3 on the course requires approved on the project (process and product), on the individual contribution to the project and on the oral presentations of the project.For a higher grade (4 or 5) the same as for grade 3 is required but with higher demands on the different aspects.The individual's final grade is obtained through a weighting of the group's grades and the individual grant.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Course evaluation", "content": "Course evaluation The result and any changes in the course's arrangement should be conveyed to both the students who implemented the valuation and to the students who will start the course.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Other regulations", "content": "Other regulations This course cannot be included in a degree containing there 213.Nor can it be part of a degree based on another degree which includes 213.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/funktionellt-programmeringsprojekt-dit216/kursplan/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About The Syllabus", "content": "About The Syllabus Registration Number GU 2024/2323 Date of Entry Into Force 2025-09-15 Decision Date 2025-01-21 Valid from holiday Spring Term 2026 Decision Maker Department of Computer Science and Engineering", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Entry Requirements", "content": "Entry Requirements to Be Eigible for the Course, The Student Must have successfully completed: Introduction to Functional Programming Object-Oriented Programming and Design", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Content", "content": "Content the course is designed to equip students with essential Knowledge and hands-on Experience in Professional Software Development.It introduces a straightforward, test-driven Software Development Process, Emphasizing iterative Development.Key Topics Include Analysis, Requirements, Specification, Design, Domain Modeling, Version Control, and Continuous Integration.Additionally, The Course Covers Design Principles SUCH AS Testability, Dependcy Management, Partitioning, and More, Providing A Foundation for Software Development.", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Objectives", "content": "Objectives on Successful Completion of the Course The Student Will Be Able To: Knowledge and Understanding Describe Basic Concepts in Software Development, E.G.Requirements and Development Process.Explain Development Methods in Technical Projects, Especialy Software Projects.Competence and Skills Run A Small-Scale Software Project Using Functional Programming in a Group According to Predefined Development Process and Shedule.Write a Report of the Project, Containing Basic Specifications of Requirements and Design.Apply Skills from Previous Programming Courses in the Design and Development Phase of the Project.Use Modern Software Development Tools, Such As Testing Frameworks, Build Automation, Continuous Integration and Version Management.Plan and conduct an oral presentation with a professional and academic approach.Judgment and approach reflect on good design and implementation in the project.Reflect on the various parts of a software development project: problem identification, problem description, specification, design, implementation, testing, etc.", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Form of teaching", "content": "Form of Teaching A Smaller Number of Lectures and A Few Workshops.At the same time, Students Work in Groups to Carry Out a Complete Development Project In The Form of a Smaller Software Project.The Project Includes Mandatory Weekly Supervision Meetings and a Final Oral Presentation.Language of Instruction: Swedish But English May Occur.", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Examination formed", "content": "Examination Formats The Course Is Assessed Through an Oral Presentation and Demonstration, Submission of A Programming Project (In the Form of Source Code), and a Final Report Describing the Project's Specification and Design.The Group Must Also Conduct a peer review of Another Group's Project.If a student who has been failed twice for the same examination element wishes to change examiners before examination session, such a request is to be granted unless there are specific reasons to the contrary (Chapter 6 Section 22 HF).If a Student Has Received A Certificate of Disability Study Support From the University of Gothenburg with a recommendation of adapted examination and/or adapted forms of assessment, an examination may decide, if this is Consistent with the Course's dented lesWOULD BE NEEDED, TO GRANT THE STUDENT ADAPTED EXAMINATION AND/OR Adaped Forms of Assessment.If a Course has been discontinued or undergone Major Changes, the student must be victimed at the Least Two Examination Sessions in Addition to Ordinary Examination Sessions.These sessions are to be spread over a period of at least one year but no more than two years after the course has been discontinued/changed.The Same Applies to Placement and Internship (VFU) Except that this is restricted to only one further examination session.If a Student has been notified that they fulfil The Requirements for Being a Student at National University (Riu Student), to Combine Elite Sports Activities With Studies, The Examiner is Entitled to Decide on Adaptation of Examinations If This Is Done In Accordance What the The Locordance WHESGothenburg.", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Grades", "content": "Grades Sub-Courses Project, 7.5 Credits Grading Scale: Pass with Distinction (5), Pass with Credit (4), Pass (3) and Fail (U) The Grading Scale for the Whole Course Compresses: Pass with Distinction (5), Passport with Credit (4), pass (3), pass (3), pass (3), pass (3), pass (4), pass (4).The Project is Assessed Based on Several Aspects (Product, Process, and Presentation) and is then Adjusted for Each Team Member Based on Individual Contribution.Assessment Criteria for Different Aspects (E.G. Quality, Functionality, Design, etc.) and How they are Weighed Can Be Found in the Course PM.Passing the Course Requires: A Passable Individual Contribution to the Project Participation in Weekly Supervision Meetings Participation in the Course's Compulsory Presentations Submission of the Course's Compulsory Reports to OBTAIN AT LEAST A PASSING GRADE,Project (Process and Product), for the individual Contribution to the Project, and for the Oral Presentations of the Project.For a Higher Grade (4 or 5), The Same Aspects Are Required But With Higher Expectations.The Final Grade for an Individual is Calculated by Weighing Together The Team Grade and the Individual Contribution.", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Course evaluation", "content": "Course evaluation the results of and possible changes to the course will be shared with students fwho participated in the evaluation and student who are starting the course.", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Other regulations", "content": "Other Regulations The Course Cannot Be Included In A Degree Which Contains Dit213.Neither can the course be included in a degree which is based on ankher Degree in which the course dit213 is included.", "origin_link": "https://www.gu.se/en/study-gothenburg/functional-programming-project-dit216/syllabus/0598bac0-dd67-11ef-aac1-c2c672b1422b", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About the syllabus", "content": "About the syllabus diary number GU 2024/2323 KEPPRACT TURNA DATE 2025-03-15 Decision date 2024-11-11 Valid from term autumn term 2025 decision makers Department of Computer and Information Technology", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Placement", "content": "The input course can be included in the following programs: Computer Science Program (N1COS) Computer Science, Master's Program (N2COS) Software Engineering and Management Master's Program (N2SOF) The Mathematics Program (N1MAT) Mathematical Sciences, Master Program (N2MAm) The course is also given) The course is given).", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Eligibility requirements", "content": "Eligibility requirements to be eligible for the course must have the student: 7.5 credits in basic mathematics (containing, for example, analysis, linear algebra and/or discreet mathematics) or in applied mathematical thinking (Dit025 or equivalent).7.5 credits in mathematical statistics (for example, MSG810 or DR) DRA where278 or equivalent), or the course there022.7.5 credits in programming in a general programming language (eg C/C ++/Java/Python/Haskell or similar).The following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Content during the course, a wide selection of methods for Data Science and AI will be presented.The course is divided into three parts: Introduction to Data Science Implementation of Data Science solutions using Python, Basic Data Analysis and Visualization.Introduction of the Data Science process, and appropriate methodology.Examples of core methods within Data Science with case studies such as in clustering, classification and regression.Data Science was related to ethics, applicable regulations and restrictions.Statistical methods for Data Science and AI introduction to some common stocastic models with examples of applications in Data Science and AI (eg Naive Bayes classication, subject models (Topic Models) of text, and hidden Markov models for sequence data) Artificial Introduction to the Relationship, including Classic AIAI philosophy.Examples of methods and applications in both classical AI (eg knowledge representation and heuristic search) as well as ML (eg neural networks, decision trees, reinforcing learning).Discussion about ethics and social impact of AI.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "CASE", "content": "Objectives after an approved course should be able to: Knowledge and understanding describe fundamental problems and approaches within Data Science and AI;Give examples of applications of Data Science and AI from different contexts;Give examples of how stochastic models and machine learning (ML) are applied within Data Science and AI;Explain basic concepts in classical AI, and the relationship between logical and data-driven, ML-based approaches within AI;Briefly describe the historical development of AI, what is possible today and discuss possible future development.Skills and ability use suitable programming libraries and techniques to implement basic transformations, visualizations and analyzes of sample data;Identify appropriate types of analysis problems for any concrete data science applications;Implement some types of stochastic models and apply them in data science and AI applications;implement and/or use AI tools for searching, planning and problem solving;Apply simple machine learning methods implemented in a standard library.Valuation and attitudes justify which types of statistical methods are suitable for the most common types of experiments in data science applications;Discuss the advantages and disadvantages of different types of approaches and models within Data Science and AI;Reflect on inherent restrictions on Data Science methods and how the use of statistical techniques can lead to questionable conclusions;Critically analyze and discuss data science and AI applications with regard to ethics, confidentiality and social impact;present a reflective attitude in all learning.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Forms of teaching", "content": "Forms for teaching lectures and seminars as well as assignments performed in pairs.Usually a submission task is given per week.Language Language: English", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination forms", "content": "Examination forms The course is examined through a salmon exam and mandatory assignments.Mandatory lectures and seminars can occur and will be announced in course PM.If a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such a request must be approved if there are no special reasons, however (Chapter 6, Section 22 HF).If a student has been notified of educational support from the University of Gothenburg with a recommendation on adapted examination and/or adapted examination form, the examiner, in case it is compatible with the course's learning objectives and provided that unreasonable resources are required, decide to grant the student adapted examination and/or adapted examination form.If a course has been discontinued or undergone a major change, the student must be offered at least two examinations, in addition to the regular examination.These occasions are distributed for a period of at least one year, but for a maximum of two years after the course has been discontinued/changed.Regarding internship and operational education (VFU), the corresponding applies, but with limitation to only an additional examination.If a student has been told that he meets the requirements for being a student at the National University (RiU student), the examiner has the right to decide on adaptation in examination, if this is done in accordance with local rules regarding Riu students at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Rating", "content": "Grade sub -courses Written Halst exam, 3.5 credits Grading scale: Approved (G) and Fail (U) assignments, 4 credits rating scale: Approved (G) and Fail (U) On the course, some of the grades approved (G) and Fail (U) are given.All modules must be approved to receive an approved grade in full course.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation about a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such request must be submitted in writing to the institution and approved if there are no special reasons, however (HF Chapter 6, section 22).In the event that a course has ceased or undergone major changes, a student must be guaranteed at least three examinations (including regular examinations) for a period of at least one year, however, as long as two years after the course has ceased/changed.As regards internship and VFU, the same applies, but with limitation to only an additional examination.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other regulations The course is collected with Chalmers.The course replaces the course Dit407, 7.5 credits.This course cannot be included in a degree containing there407 or its 852.Nor can it be part of a degree based on another degree where there406 or dit407 or its 852 are included.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/introduktion-till-data-science-och-ai-dit408/kursplan/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About The Syllabus", "content": "About The Syllabus Registration Number GU 2024/2323 Date of Entry Into Force 2025-03-15 Decision Date 2024-11-11 Valid From holiday Autumn Term 2025 Decision Make Department of Computer Science and Engineering", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Position", "content": "Position The Course Can Be Part of the Following Programs: Computer Science, Bachelor's Program (N1COS) Computer Science, Master's Program (N2COS) Software Engineering and Management Master's Program (N2SOF) Bachelor's program in MathematicsProgram (N2mat) The Course is a Also a single-Subject Course at Gothenburg University.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Entry Requirements", "content": "Entry Requirements to Be Eligible for the Course Students Should have: 7.5 HEC IN BASIC MATHEMATICS (Containing E.G. Calculus, Linear Algebra and/or Discrete Mathematics) or the Course Applied Mathematical Thinking (Dit025 or Equival7.5 HEC Mathematical Statistics (e.g. Msg810 or there 862 or Similar) or the Two Courses dit847 and Dit278 (or equivalent) or the course dit022.7.5 HEC Programming in A General-Purpose Language (E.G. C/C ++/Java/Python or Similar. Applicants MUST PROPE KNOWED OF ENGLISH: English 6/English B or the equivalent level of an international recogniz.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Content during the course, a wide selection of methods for data science and ai will be introduced.The Course is Divided Into Three Parts: Introduction to Data Science Implementation of Data Science Solutions, Using Python, Basic Data Analysis and Visualization.Introduction of the Data Science Process, and Appropriate Methodology.Examples of core data science methods with case studies such as in cluster, classification and regression.Data Science Put in Context Regarding Ethics, Regulations and Limitations.Statistical Methods for Data Science and AI Introduction of Some Common Stochastic Models with Examples of Applications in Data Science and AI (for Instance, Naive Bayes Classifiers, Topic Models for Text and Hidden Markov Models for Sequence Data).Artificial Intelligence Introduction to Classical Ai and Machine Learning, Including The Relationship To Related Areas Such As Algorithms and Optimization, and Ai Philosophy.Examples of Methods and Applications of AI, in Classical AI (Search and Constraint Satisfaction), and ML-Based (Search Engines, Naive Bayes and Neural Networks) Discussion of Ethics and Society Impact of AI.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Objectives", "content": "Objectives on Successful Completion of the Course The Student Will Be Able To: Knowledge and Understanding Describe Fundamental Types of Problems and Main Approaches in Data Science and AI;Give Examples of Data Science and AI Applications From Different Contexts;Give Examples of How Stochastic Models and Machine Learning (ML) are Applied in Data Science and AI;Explain Basic Concepts in Classical AI, and the Relationship Between Logical and Data Driven, ML-Based Approaches Within AI;Briefly Explain The Historical Development of AI, What is Possible Today and Discuss Possible Future Development.Competence and Skills Use Appropriate Programming Libraries and Techniques to Implement Basic Transformations, Visualizations and Analysis of Example Data;Identify Appropriate Types of Analysis Problems For Some Concrete Data Science Applications;Implement some Types of Stochastic Models and Apply Them in Data Science and AI Applications;Implement and/or use Ai-Tools for Search, Planning and Problems Solving;Apply Simple Machine Learning Methods implemented in A Standard Library.Judement and approach Justify which type of statistical method is applicable for the most common types of experiments in data science applications;Discuss Advantages and Drawbacks of Different Types of Approaches and Models Within Data Science and AI;Reflect on Inherent Limitations of Data Science Methods and How the Misuse of Statistical Techniques Can Lead to Dubious Conclusions;Critically Analyze and Discuss Data Science and AI Applications With Respect to Ethics, Privacy and Society Impact;Show a reflective attitude in all learning.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Form of teaching", "content": "Form of Teaching Lectures and Seminars Together with Assignments that are done in pairs.Usually there will be one Assignment Each Week.LANGUAGE OF INSTRUCTION: English", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination formed", "content": "Examination Formats The Course Is Examed by a Written Examination as well as mandatory Written Assignments.Compulsory Lectures and Seminars May Occur and will be Stated in the course PM.If a student who has been failed twice for the same examination element wishes to change examiners before examination session, such a request is to be granted unless there are specific reasons to the contrary (Chapter 6 Section 22 HF).If a Student Has Received A Certificate of Disability Study Support From the University of Gothenburg with a recommendation of adapted examination and/or adapted forms of assessment, an examination may decide, if this is Consistent with the Course's dented lesWOULD BE NEEDED, TO GRANT THE STUDENT ADAPTED EXAMINATION AND/OR Adaped Forms of Assessment.If a Course has been discontinued or undergone Major Changes, the student must be victimed at the Least Two Examination Sessions in Addition to Ordinary Examination Sessions.These sessions are to be spread over a period of at least one year but no more than two years after the course has been discontinued/changed.The Same Applies to Placement and Internship (VFU) Except that this is restricted to only one further examination session.If a Student has been notified that they fulfil The Requirements for Being a Student at National University (Riu Student), to Combine Elite Sports Activities With Studies, The Examiner is Entitled to Decide on Adaptation of Examinations If This Is Done In Accordance What the The Locordance WHESGothenburg.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Grades", "content": "Grades Sub-Courses Written Hall Examination, 3.5 Credits Grading Scale: Pass (G) and Fail (U) Assignments, 4 Credits Grading Scale: Pass (G) and Fail (U) The Grading Scale for the Whole Course Compresses: Pass (G) and Fail (U).All modules must be passed for passing the course.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation if a student, who has failed the same exam elements on two occasions, wishes to change examiners before examination session, SUCH A REQUEST IS TO BE SUBMITTED TO THE DEPARTMENT IN WRITING AND GRANCATION 22 OFFOrdinance).In the event that a course has been ceased or undergone major changes, student to be guaranteeed at least three examination sessions (including the ordinary examination) over a period of at least one year, then thenThe Same Applies to Work Experience and VFU, Although this is restricted to just one additional examination session.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other Regulations The Course Is A Joint Course Together with Chalmers.The Course Replaces the Course Dit407, 7.5 Credits.The Course Cannot Be Included in a Degree Which Contains Dit407 or Dit852.Neither can the course be included in a degree which is based on ankher Degree in which the course dit407 or dit852 is included.", "origin_link": "https://www.gu.se/en/study-gothenburg/introduction-to-data-science-and-ai-dit408/syllabus/05593df5-a7f7-11ef-8526-ed8750e24faf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About the syllabus", "content": "About the syllabus diary number (Format: GU 20XX/XXXX) GU 2024/2323 Handkraftdate Date 2025-03-15 Decision Date 2024-11-19 Valid from term autumn term 2025 decision makers Department of Data and Information Technology", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Placement", "content": "The placement course is compulsory in Software Engineering and Management, Bachelor's program (N1SOF).", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Eligibility requirements", "content": "Eligibility requirements to be eligible for the course must have completed the courses DRA044 Object -oriented programming, 7.5 credits, DRT034 Systematic data management, 7.5 credits, and DRA357 Distributed systems, 7.5 credits, or the equivalent.The following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Contents The course aims to treat key concepts, techniques and skills for server and client-based web programming, including basic- and advanced technology and framework for interactive full-stack web programming (HTML, CSS, JavaScript).The term responsive design will be used to show similarities and differences in web applications.Through this course, students will learn how to develop web applications with dynamic and interactive content.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "CASE", "content": "Objectives after approved course should be able to: Knowledge and understanding Define and contrast client- and server-based web development Explain the concept of full-stack development (Full-Stack Development) describe the key concepts and methods for the development of web applications, including session management, database connection, asynchronous design (AJAX), AJAX).Web applications with dynamic and interactive content Skills and ability to develop web applications with dynamic and interactive content design web layouts with technologies such as HTML, CSS and Javascript Develop Fullstack applications using Modern Web Library and Framework Develop applications for mobile platforms with the help of responsive design Management Design ManReflect on how web programs can be written and how different components are integrated, to design software effectively", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Forms of teaching", "content": "Forms for teaching teaching mainly consist of a project, which the students work with in small groups throughout the reading period.The project is divided into several reconciliation points.Lectures and exercises will be given as needed to provide students with the necessary theoretical and practical knowledge.Language Language: English", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination forms", "content": "Examination forms The assessment of the individual student will be based on two aspects: (1) the quality of the finished group project, and (2) Individual contribution.Both aspects must be assessed at least grade 3 for approved course grades.Students must submit written estimates of their own and other group members' contributions in the project, which will be part of the assessment of the student's individual contribution to the project assignment.Students who have contributed insufficiently in the project can be imposed on an individual task for approved course grades.If a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such a request must be approved if there are no special reasons, however (Chapter 6, Section 22 HF).If a student has been notified of educational support from the University of Gothenburg with a recommendation on adapted examination and/or adapted examination form, the examiner, in case it is compatible with the course's learning objectives and provided that unreasonable resources are required, decide to grant the student adapted examination and/or adapted examination form.If a course has been discontinued or undergone a major change, the student must be offered at least two examinations, in addition to the regular examination.These occasions are distributed for a period of at least one year, but for a maximum of two years after the course has been discontinued/changed.Regarding internship and operational education (VFU), the corresponding applies, but with limitation to only an additional examination.If a student has been told that he meets the requirements for being a student at the National University (RiU student), the examiner has the right to decide on adaptation in examination, if this is done in accordance with local rules regarding Riu students at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Rating", "content": "Rating sub -courses Project, 7.5 credits rating scale: Very well approved (5), well approved (4), approved (3) and failed (U) on the course is given some of the grades very well approved (5), well approved (4), approved (3) and Fail (U).The course grade consists of the grade on the project assignment.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other regulations the course replaces the course DR) 7.5 credits.This course cannot be included in a degree containing there342.Nor can it be part of a degree based on another degree where there342 included", "origin_link": "https://www.gu.se/studera/hitta-utbildning/projekt-webbutveckling-dit343/kursplan/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About The Syllabus", "content": "About The Syllabus Registration Number (Format: GU 20XX/XXXX) GU 2024/2323 Date of Entry Into Force 2025-03-15 Decision Date 2024-11-19 Valid from holiday Autumn Term 2025 Decision Maker Department of Computer Scene and Engine", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Position", "content": "Position The Course Is Compulsory Within The Software Engineering and Management, Bachelor's Program (N1SOF).", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Entry Requirements", "content": "Entry Requirements to Be Eligible for this course, Students must have successfully completed the courses dit044 Object-Oriented Programming, 7.5 Credits, Dit034 Data Management, 7.5 Credits, and Dit357 Distribival.Applicants MUST Prove Knowledge of English: English 6/English B or the equivalent level of an international recognized test, for Example Toefl, IELTS.", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Content This Course Aims to Cover Key Concepts, Technologies and Skills for Server-Side and Client-Side Web Programming, Including Basic and Advanced Technologies and Frameworks for Interactive Fullstack Web Programming (HTML, CSS, JavascriptThrough this course, Students will learn how to develop web applications with Dynamic and Interactive Contents, Including Web Applications Designed for Mobile Consumption (Responsiveness).", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Objectives", "content": "Objectives on Successful Complement of the Course The Student Will Be Able To: Knowledge and Understanding Define and Contrast Client-Side and Server-Side Web Development Explain The Concept of Full-Stack Development Describe The Key Concepts and methods for Web Application DEVELOPEConnectivity, Asynchronous Processing (AJAX), Responsive Design, and Mobile-First Web Development Explain Different Programming Techniques for Developing Web Applications with Dynamic and Interactive Contents Competence and Skills DevelopTechnologies SUCH AS HTML, CSS, and JavaScript Develop Full-Stack Applications Using Modern Web Libraries and Frameworks Develop Mobile Cross-Platform Applications Using Responsive Design Handle Database WEB Programnectivity and asynchronous processing release reimDifferent Components Integrate, Thus Designing Software Efficiently", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Form of teaching", "content": "Form of Teaching the Main Form of Teaching is a Project That The Students Work On In Small Groups.The Project Will Be Scaffolded Into Multiple Milestones.Lectures and tutorials will be provided as necessity to provide learners with required theoretical and practice.LANGUAGE OF INSTRUCTION: English", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination formed", "content": "Examination Formats Assessment of Individual Students will be carried out based on two aspects: (1) Quality of the Final Project of the Group, and (2) Individual Contribution.Both Aspects Need to Be Individually Assessed as at Least 3 to Receive a Passing Grade.Students are Required to Complete Written Self- and Peer-Assessment Forms During the Course Which Will Be Part of the Assessment of the Student's Individual Contribution to the Assignments.Students who have not contributed sufficiently to the prooject may be asked to complete an individual assignment in order to receive a passing grade.If a student who has been failed twice for the same examination element wishes to change examiners before examination session, such a request is to be granted unless there are specific reasons to the contrary (Chapter 6 Section 22 HF).If a Student Has Received A Certificate of Disability Study Support From the University of Gothenburg with a recommendation of adapted examination and/or adapted forms of assessment, an examination may decide, if this is Consistent with the Course's dented lesWOULD BE NEEDED, TO GRANT THE STUDENT ADAPTED EXAMINATION AND/OR Adaped Forms of Assessment.If a Course has been discontinued or undergone Major Changes, the student must be victimed at the Least Two Examination Sessions in Addition to Ordinary Examination Sessions.These sessions are to be spread over a period of at least one year but no more than two years after the course has been discontinued/changed.The Same Applies to Placement and Internship (VFU) Except that this is restricted to only one further examination session.If a Student has been notified that they fulfil The Requirements for Being a Student at National University (Riu Student), to Combine Elite Sports Activities With Studies, The Examiner is Entitled to Decide on Adaptation of Examinations If This Is Done In Accordance What the The Locordance WHESGothenburg.", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Grades", "content": "Grades Sub-Courses Project, 3 Credits Grading Scale: Pass with Distinction (5), Pass with Credit (4), Pass (3) and Fail (U) The Grading Scale for the Whole Course Compresses: Pass with Distinction (5), Pass with Credit (4), Pass (3) and FAIL (3).The Grade for the Entire Course is identical to the grade of project submodule.", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation the course is evaluated through meetings Both during and after the course between teachers and student representatives.Further, an Anonymous Questionnaire is used to Ensure Written Information.The Outcome of the Evaluations Serves to Improve The Course By Indication which Parts Could Be Added, Improved, Changed or Removed.", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other Regulations The Course Replaces The Course Dit342, 7.5 Credits.The Course Cannot Be Included in a Degree Which Contains Dit342.Neither can the course be included in a degree which is based on anchor Degree in which the course dit342 is included.", "origin_link": "https://www.gu.se/en/study-gothenburg/project-web-engineering-dit343/syllabus/7492dee8-bbbd-11ef-9553-beecfac44351", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About the syllabus", "content": "About the syllabus diary number (Format: GU 20XX/XXXX) GU 2024/2323 HEAKET TRIVIDE DATE DATE DATE 2025-03-15 Decision date 2024-11-15 Valid from term autumn term 2025 decision makers Department of Data and Information Technology", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Placement", "content": "The placement course can be included in the following program: Computer Science Program (N1COS) The course is also given as a standalone course at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Eligibility requirements", "content": "Eligibility requirements to be eligible for the course must have an introductory course in programming in eg.Python or Java or Haskell.Examples of the corresponding courses are DRA441, DRT013, FYD095 and MVG301.The following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Content the course begins with a quick introduction to the basics of Python, which acts as repetition for students who can already Python with also enable students with a different background to get started with Python.After the introduction, the course goes on to more advanced features in Python programming: Object-oriented design Functional programming techniques Advanced Python-specific techniques The use of standard library test method The creation of major programming projects The goal is to provide a solid state of Python so that the participants can read and the participants can read and the participants can read and the participants can read and the participants can read and the participants can read and the participants can read and write and the participants can read and write and the parties can read and write and writing and writing and writing.The theoretical material is presented in relation to a project, which is divided into individual components (laboratory work) and which results in extensive software systems that implement techniques such such as scientific calculations, data analysis, visualization and machine learning.Previous knowledge of these techniques is not presumed but will be given as part of teaching;The focus is not on theory but on helping students use relevant software libraries in adequate ways.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "CASE", "content": "Objectives After approved course, the student should be able to: Knowledge and understanding recognize all structures in Python and design choices behind them Explain the design options in modular and scaling programming skills and ability to create well -organized software projects for complex tasks read and analyze other code contribute to collaborative projects use standard library to advanced programming data.At different levels of detail, apply basic methods to provide constructive feedback in peer review of program code, including taking JML aspects in respect (equality, diversity and equal conditions) valuation and attitudes reason about design choices in software development estimate the complexity of programming assignments", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Forms of teaching", "content": "Forms for teaching lectures, exercises, laboratory work, individual guidance.Language language: The course is given in Swedish and English.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination forms", "content": "Examination forms The course project is a compulsory course.The project can be done individually or in groups.The project is assessed with grades failed or approved.The exam is also a compulsory step.It is assessed with grades failed, 3, 4 and 5. The purpose of the exam is to check that the students have made their projects independently and understand what they are doing.If a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such a request must be approved if there are no special reasons, however (Chapter 6, Section 22 HF).If a student has been notified of educational support from the University of Gothenburg with a recommendation on adapted examination and/or adapted examination form, the examiner, in case it is compatible with the course's learning objectives and provided that unreasonable resources are required, decide to grant the student adapted examination and/or adapted examination form.If a course has been discontinued or undergone a major change, the student must be offered at least two examinations, in addition to the regular examination.These occasions are distributed for a period of at least one year, but for a maximum of two years after the course has been discontinued/changed.Regarding internship and operational education (VFU), the corresponding applies, but with limitation to only an additional examination.If a student has been told that he meets the requirements for being a student at the National University (RiU student), the examiner has the right to decide on adaptation in examination, if this is done in accordance with local rules regarding Riu students at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Rating", "content": "Grade sub -courses Written Halst exam, 3 credits rating scale: Very well approved (5), well approved (4), approved (3) and Fail (U) project, 4.5 credits rating scale: Approved (G) and Fail (U) On the course, some of the grades are given very well approved (5), well approved (4).The final grade for the course is the same as the grade from the exam.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other regulations The course is collected with Chalmers.The course replaces the course there515, 7.5 credits.This course cannot be included in a degree containing there515.Nor can it be part of a degree based on another degree where 515 is included.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/fortsattningskurs-i-programmering-i-python-dit516/kursplan/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About The Syllabus", "content": "About The Syllabus Registration Number (Format: GU 20XX/XXXX) GU 2024/2323 Date of Entry Into Force 2025-03-15 Decision Date 2024-11-15 Valid from holiday Autumn Term 2025 Decision Maker Department of Computer Science and Engineering", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Position", "content": "Position The Course Can Be Part of the Following Program: Computer Science, Bachelor's Program (N1COS) The Course is a Also a Single-Subject Course at Gothenburg University.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Entry Requirements", "content": "Entry Requirements to Be Eigible for the Course, Students must have an introductory course in programming, in e.g.Python, Java or Haskell.Examples of Such Courses are Dit441, Dit013, FYD095 and MVG301.Applicants MUST Prove Knowledge of English: English 6/English B or the equivalent level of an international recognized test, for Example Toefl, IELTS.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Content the course starts with a quick introduction to the elements of python, which serve as repetition for student who already know python but also enables student with other backgrounds to get started with python.After the introduction, The Course Proceeds to More Advanced Features of Python Programming: Object-Oriented Design Functional Programming Techniques Advanced Python-Specific Techniques The Use of Standard Libraries Testing Methodologies Creation of Larger ProgrammUnderstanding of python so that the participants can Read and Write State of the Art Code and Reason about Design Choices.The theoretical material is presented in relationship to a project, which is divided into individual components (labs), and which results in a comprehensive software system implementing technique such as scientific computing, data analysis, visualization, and machine learning.No Knowledge of these techniques is presupposed but will be a part of the teaching;The focus here is not on the theory but on enablen the student to use relevant software libraries in adequate way.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Objectives", "content": "Objectives on Successful Complement of the Course The Student Will Be Able To: Knowledge and Understanding Recognize All Constructs of Python and the Design Choices Behind Them Explain The Design Options In Modular and Scalable Programming Competence and Skills Create SoftsCode Written by Others Contribute to Collaborative Projects Use Standard Libraries for Advanced Tasks Apply Testing Methods to Guarantee The Quality of Code Write Code Documentation on Different Levels of Detail Apply Fundamamenta Review In Programs to Give Programs to Give Feedback In Programs to give.of Gender Equality, Diversity, and Equal Conditions Judgment and Approach Reason about Software Design Choices Assess The Complexity of Programming Tasks", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Form of teaching", "content": "Form of Teaching Lectures, Exercises, Assignments, Individual Supervision.Language of Instruction: The Course is given in Swedish but English may occur.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination formed", "content": "Examination Formats The Course Project Is A Compulsory Element of the Course.The Project Can Be Carried Out Individually or in a Group.The Project is Graded with Grades Fail or Pass.The Exam is Also a Compulsory Element.It is graded fail, 3, 4, OR 5.The Purpose of the Exam Is To Control That The Students Have Made Their Projects Independently and Understood What They Are Doing.If a student who has been failed twice for the same examination element wishes to change examiners before examination session, such a request is to be granted unless there are specific reasons to the contrary (Chapter 6 Section 22 HF).If a Student Has Received A Certificate of Disability Study Support From the University of Gothenburg with a recommendation of adapted examination and/or adapted forms of assessment, an examination may decide, if this is Consistent with the Course's dented lesWOULD BE NEEDED, TO GRANT THE STUDENT ADAPTED EXAMINATION AND/OR Adaped Forms of Assessment.If a Course has been discontinued or undergone Major Changes, the student must be victimed at the Least Two Examination Sessions in Addition to Ordinary Examination Sessions.These sessions are to be spread over a period of at least one year but no more than two years after the course has been discontinued/changed.The Same Applies to Placement and Internship (VFU) Except that this is restricted to only one further examination session.If a Student has been notified that they fulfil The Requirements for Being a Student at National University (Riu Student), to Combine Elite Sports Activities With Studies, The Examiner is Entitled to Decide on Adaptation of Examinations If This Is Done In Accordance What the The Locordance WHESGothenburg.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Grades", "content": "Grades Sub-Courses Written Hall Examination, 3 Credits Grading Scale: Pass with Distinction (5), Pass with Credit (4), Pass (3) and Fail (U) Project, 4.5 Credits Grading Scale: Pass (G) and Fail (U) The Grading Scale for the Whole Comrises(4), pass (3) and fail (U).The Final Grade for the Course Is The Grade From The Exam.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation the course is evaluated through meetings Both during and after the course between teachers and student representatives.Further, an Anonymous Questionnaire is used to Ensure Written Information.The Outcome of the Evaluations Serves to Improve The Course By Indication which Parts Could Be Added, Improved, Changed or Removed.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other Regulations The Course Is A Joint Course Together with Chalmers.The Course Replaces the Course Dit515, 7.5 Credits.The Course Cannot Be Included In A Degree Which Contains Dit515.Neither can the course be included in a degree which is based on ankher Degree in which the course dit515 is included.", "origin_link": "https://www.gu.se/en/study-gothenburg/advanced-programming-in-python-dit516/syllabus/9b8ec4ed-a8d5-11ef-a240-57578bd7405a", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About the syllabus", "content": "About the syllabus diary number (Format: GU 20XX/XXXX) GU 2024/2323 HEAVIDE TURN DATE DATE DATE DATE DATE 2025-03-15 Decision date 2024-11-26 Valid from term autumn term 2025 decision makers Department of Data and Information Technology", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Placement", "content": "The input course can be included in the following programs: Computer Science, Candidate Program (N1COS) Computer Science, Master's Program (N2COS) Applied Data Science, Master Program (N2ADS) Game Design & Technology, Master Program (N2GDT) Software and Management,Course at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Eligibility requirements", "content": "Eligibility requirements requirement to participate in the course is that two years have been successfully completed in computer science or aunt.The course there122 (computer system technology) or the equivalent constitutes prerequisites.The following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Content the course deals with architectural techniques necessary to achieve high performance for user programs.It also covers simulation -based analysis methods for quantitative assessment of the impact a certain architectural technology has on performance.The content is divided into the following parts: The first part covers aspects that affect the development of computer technology including Moore's law, performance measure (Executing time versus throughput), benchmarking and foundations for computer performance such as Amdahl's law and memorial tackle.The second part covers different techniques to utilize instruction level parallelism (ILP) by defining key concepts for what ILP is and what limits it.The techniques covered are divided into two categories: dynamic and static techniques.The most important dynamic techniques that are taken up are Tomasulo's algorithm, jumping rediction and speculation.The most important static techniques are 'loop unrolling', 'software pipelining', 'trace scheduling' and 'predicated instructions'.The third part covers principles for modern memory hierarchies such as inclusive and non-clusive memory hierarchies, Lockup free caching techniques, prefetching, classification of cache misses.The fourth part is about multi -core microprocessors and techniques such as multi -counseling and cache coherence.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "CASE", "content": "Objectives after an approved course should be able to: Knowledge and understanding understanding of advanced techniques for instruction pipelining in order to perform computer instructions in parallel.Understanding principles behind modern memorial hierarchies understanding of principles behind multi -core processors so -called multicore system.Skills and ability knowledge and understanding of terminology and key concepts in computer architecture necessary to understand progress in research on the subject.Valuation ability and approach ability to quantitatively determine the impact of architectural techniques on performance and power consumption of executing user programs through the use of modern simulation tools.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Forms of teaching", "content": "Forms for teaching the course are divided into lectures, exercises, three laboratory work and a voluntary reading task that gives bonus points for the exam.The course uses the pedagogy form Flipped-Classroom teaching.It is assumed that the students prepare for each lecture by studying the recorded material.One dew is given at each lecture.Three correct dews provide bonus points for use for higher ratings on approved exam.Language Language: English", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination forms", "content": "Examination forms The student is assessed based on submitted laboratory reports (1.5 credits) individually or in groups and a written exam (6.0 credits) individually in the examination hall.If a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such a request must be approved if there are no special reasons, however (Chapter 6, Section 22 HF).If a student has been notified of educational support from the University of Gothenburg with a recommendation on adapted examination and/or adapted examination form, the examiner, in case it is compatible with the course's learning objectives and provided that unreasonable resources are required, decide to grant the student adapted examination and/or adapted examination form.If a course has been discontinued or undergone a major change, the student must be offered at least two examinations, in addition to the regular examination.These occasions are distributed for a period of at least one year, but for a maximum of two years after the course has been discontinued/changed.Regarding internship and operational education (VFU), the corresponding applies, but with limitation to only an additional examination.If a student has been told that he meets the requirements for being a student at the National University (RiU student), the examiner has the right to decide on adaptation in examination, if this is done in accordance with local rules regarding Riu students at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Rating", "content": "Grade sub -courses Written Salstent, 6 credits rating scale: Very well approved (5), well approved (4), approved (3) and Fail (U) Laboratory, 1.5 credits rating scale: Approved (G) and Fail (U) On the course, some of the grades are very well approved (5), well approved (4).For grades 3, at least 40% of total scores are required on the exam.For grades 4, at least 60% of total scores are required on the exam and for grades 5 shears at least 80% of total scores on the degree.You can receive 4 bonus points if you have answered correctly to at least 3 dews given during lecture time.You can obtain another 4 bonus points if you orally report the case study for the other course participants.These bonus points are added to the result of the exam and can be used for higher grades but not to get approved on the course.To be approved for the entire course, approved on the lab course (1.5 ECTS) and the exam (6.5 ECTS) are required.The final grade on the course is the same as the final grade on the exam.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other regulations The course is collected with Chalmers.The course replaces the course Dit051, 7.5 credits.This course cannot be included in a degree containing there051.Nor can it be part of a degree based on another degree that includes it051.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/datorarkitektur-dit052/kursplan/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "About The Syllabus", "content": "About The Syllabus Registration Number (Format: GU 20XX/XXXX) GU 2024/2323 Date of Entry Into Force 2025-03-15 Decision Date 2024-11-26 Valid from Vacation Spring term 2025 Decision Maker Department of Computer Science and Engine", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Position", "content": "Position The Course Can Be Part Of The Following Programs: Computer Science, Bachelor's Program (N1COS) Computer Science, Masters Program (N2COS) Applied Data Science, Masters Program (N2ADS) Software and Technology (N2GDTEMasters Program (N2Sof) The Course is a Also a single-Subject Course at Gothenburg University.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Entry Requirements", "content": "Entry Requirements Requirements to Participate in the Course Are That Two Years Have Been Successfully Completed in Computer Science or Equivalent.The Course Dit122 (Computer System Engineering) or equivalent is a prerequisite.Applicants MUST Prove Knowledge of English: English 6/English B or the equivalent level of an international recognized test, for Example Toefl, IELTS.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Content", "content": "Content the course covers Architectural Techniques Necessary to Achieve High Performance for User Programs.It also covers simulation-based analysis methods for quantitative assessment of the impact of a particular architectural technique on performance.The Content is Divided Into the Following Parts: The First Part Party Covers Affecting The Development of Computer Technology Including Moore's Law, Performance Measures (Execution Time Vs. Throughput), Benchmarking, and foundals of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computer Of Computes Of Computer Of Computer Of Computer Of Computes Of Computer, and Fundamentals Of ComputerLocality.The Second Part Covers Various Techniques for Exploiting Instruction Level Parallelism (ILP) By Defining Key Concepts of What ILP IS AND WHAT LIMITS IT.The Techniques Covered Fall Into Two Categories: Dynamic and Static Techniques.The Main Dynamic Techniques Covered Are Tomasulo's Algorithm, Branch Prediction and speculation.The Most Important Static Techniques Are Loop Unrolling, Software Pipelining, Trace Scheduling and Predicated Instructions.The Third Part Covers Principles of Modern Memory Hierarchies Such As Inclusive and Non-Inclusive Memory Hierarchies, Lockup Free Caching Techniques, Prefetching, Classification of Cache Misses.The Fourth Part Deals with Multi-Core Microprocessors and Techniques Such as multi-threading and cache coherence.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Objectives", "content": "Objectives After Compleion of the Course The Student Should Be Able To: Knowledge and Understanding Understanding of Advanced Instruction Pipelining Techniques to Be Able To Execute Computer Instructions In Parallel.Understanding of Principles Behind Modern Memory Hierarchies Understanding of Principles Behind Multi-Core Processors Skills and Abilities Knowledge and Understanding of Terminology and Key Concepts in Computer Architecture Necessary to Understand Advances in Research in the subject.Judgment Ability and Approach Ability to Quantitatively Determine the Impact of Architectural Techniques On the Performance and Power Consumption of Executing User Programs by Using Modern Simulation Tools.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Form of teaching", "content": "Form of Teaching the Course Is Divided Into Lectures, Exercises, Three Labs and an Optional Reading Assignment that Gives Bonus Points for the Exam.The Course Uses The Pedagogy Form of Flipped-Classroom Teaching.It is assumed that student prepare for each lecture by studying the recorded material.A quizz is given at each lecture.Three Corract Quizzes Give Bonus Points to Be Used For A Higher Grade On A Passed Exam.LANGUAGE OF INSTRUCTION: English", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Examination formed", "content": "Examination Formats The Student is Assessed Based on Submitted Laboratory Reports (1.5 HECS) Individually or in Groups and a Written Exam (6.0 HECS) Individually in the Exam If A Student Who Has Been Faily for the same Examination element Wishas to Change Examina EXAMINE EXAMINE EXAMINE EXAMINE EXAMINE EXAMINE EXAMINE EXAMINE EXAMINE EXAMINE EXAMINES TO CHAMINE EXAMITTo be Granted Unless There Are Specific Reasons to the Contrary (Chapter 6 Section 22 HF).If a Student Has Received A Certificate of Disability Study Support From the University of Gothenburg with a recommendation of adapted examination and/or adapted forms of assessment, an examination may decide, if this is Consistent with the Course's dented lesWOULD BE NEEDED, TO GRANT THE STUDENT ADAPTED EXAMINATION AND/OR Adaped Forms of Assessment.If a Course has been discontinued or undergone Major Changes, the student must be victimed at the Least Two Examination Sessions in Addition to Ordinary Examination Sessions.These sessions are to be spread over a period of at least one year but no more than two years after the course has been discontinued/changed.The Same Applies to Placement and Internship (VFU) Except that this is restricted to only one further examination session.If a Student has been notified that they fulfil The Requirements for Being a Student at National University (Riu Student), to Combine Elite Sports Activities With Studies, The Examiner is Entitled to Decide on Adaptation of Examinations If This Is Done In Accordance What the The Locordance WHESGothenburg.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Grades", "content": "Grades Sub-Courses Written Hall Examination, 6 Credits Grading Scale: Pass with Distinction (5), Pass with Credit (4), Pass (3) and Fail (U) Laboratory, 1.5 Credits Grading Scale: Pass (G) and Fail (U) The Grading SCALE FOR THE VOLE COMPROM COMS COMPRES COMS COMPRITES(4), pass (3) and fail (U).For Grade 3, at the Least 40% of the Total Score on the Exam Is Required.For Grade 4, at the Least 60% of the Total Score on the Exam is Required and for Grade 5, at the Least 80% of the Total Score on the Exam Is Required.You can receive 4 bonus points if you Answered Correctly at Least 3 Quizzes Given During Lecture Time.You can receive an additional 4 bonus points if you orally gift the case study to the other course participants.These bonus points are added to the result on the exam and can be used for higher grade's but not to pass the course.To be approved on the Entire Course, The Labs (1.5 ects) and the exam (6 ects) must be approved.The Grade of the Entire Course is the same as the Grade of the Exam.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Course evaluation", "content": "Course evaluation the course is evaluated through meetings Both during and after the course between teachers and student representatives.Further, an Anonymous Questionnaire is used to Ensure Written Information.The Outcome of the Evaluations Serves to Improve The Course By Indication which Parts Could Be Added, Improved, Changed or Removed.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Other regulations", "content": "Other Regulations The Course Is A Joint Course Together with Chalmers.The Course Replaces the Course Dit051, 7.5 Credits.The Course Cannot Be Included in a Degree Which Contains Dit051.Neither can the course be included in a degree which is based on ankher Degree in which the course dit051 is included.", "origin_link": "https://www.gu.se/en/study-gothenburg/computer-architecture-dit052/syllabus/9a48fac0-abe1-11ef-88a2-cbd37ee3403f", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Software Development: Theory and Practical application", "content": "S syllabus Software development: Theory and practical application Software Engineering: Theory and Practice", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "About the syllabus", "content": "About the syllabus diary number GU 2024/2323 Entry Power Date 2025-03-15 Decision date 2024-11-08 Valid from term autumn term 2025 decision makers Department of Computer and Information Technology", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Placement", "content": "The input course can be included in the following programs: Computer Science, Bachelor's Program (N1COS) Computer Science, Master's Program (N2COS) Software Engineering and Management, Master's program (N2SOF) The course is also given as a free -standing course at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Eligibility requirements", "content": "Eligibility requirements Knowledge in Java programming, as well as completed courses in data structures and algorithms (e.g. dit183) and object -oriented programming (E.G., DR044, DRA954) corresponding to at least 7.5hp per course.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Content", "content": "Content \"Software development: Theory and practical application\" is designed to give the student knowledge and skills necessary to develop, manage and maintain software systems for various industrial applications.The course makes an offspring in basic software development principles and then continued with the challenges of designing a software architecture, requirements management and test strategies.The course contains special areas such as software development for real -time systems, software recycling, and development for learning enabled systems.Particular attention will be paid to software development for security-critical systems, an area that is important for the vehicle and aviation industry where reliability and conformity with strict standards are of high importance.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "CASE", "content": "Objectives after an approved course should be able to: Knowledge and understanding understand the basic principles of software development, including various life cycles for software development (SDLC), requirements management and design of software architecture.Describe strategies for software testing, maintenance and evolution as well as methods for software development for real-time and security-critical systems.Identify challenges and strategies for integration of software into complex systems with particular regard to machine learning components.Skills and ability use professional tools for development, testing and analysis of software projects.Design and evaluate scalable, maintenance and effective software architectures.Apply software development principles in special areas such as real-time, security critical and learning enabled systems.Valuation ability and approach critically assess various SDLC models and software development techniques to determine their efficiency within the framework of a specific project.Evaluate and integrate software revolution solutions for various applications, including real-time, security critical and learning enabled systems.Understand how software development principles are applied in areas such as finance, telecommunications and automation.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Forms of teaching", "content": "Forms for teaching the course consist of lectures and exercises.The exercises lay the grounds for the assignments that are designed to familiarize the students with a practical application of theoretical concepts that have been taught in the lectures as well as various software used in software development.Language Language: English", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Examination forms", "content": "Examination forms The course is examined through an individual exam and through tasks that are normally carried out in groups.If a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such a request must be approved if there are no special reasons, however (Chapter 6, Section 22 HF).If a student has been notified of educational support from the University of Gothenburg with a recommendation on adapted examination and/or adapted examination form, the examiner, in case it is compatible with the course's learning objectives and provided that unreasonable resources are required, decide to grant the student adapted examination and/or adapted examination form.If a course has been discontinued or undergone a major change, the student must be offered at least two examinations, in addition to the regular examination.These occasions are distributed for a period of at least one year, but for a maximum of two years after the course has been discontinued/changed.Regarding internship and operational education (VFU), the corresponding applies, but with limitation to only an additional examination.If a student has been told that he meets the requirements for being a student at the National University (RiU student), the examiner has the right to decide on adaptation in examination, if this is done in accordance with local rules regarding Riu students at the University of Gothenburg.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Rating", "content": "Grade sub -courses Written Salstent, 2.5 credits Grading scale: Very well approved (5), well approved (4), approved (3) and Failure (U) submission tasks, 5 credits rating scale: very well approved (5), well approved (4), approved (3) and submit (U) to be approved on the course required on the course required on the course required on the course required on(5hp).Both the written exam and the assignments need to be approved.The final grade is given based on the tentamine result *0.33 + the submission tasks *0.67 rounded to the nearest integer.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Course evaluation", "content": "Course evaluation The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Other regulations", "content": "Other regulations The course is collected with Chalmers.The course replaces the course there593, 7.5 credits.This course cannot be included in a degree containing there593.Nor can it be part of a degree based on another degree where 593 is included.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/programvaruutveckling-teori-och-praktisk-tillampning-dit592/kursplan/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Software Engineering: Theory and Practice", "content": "Syllabus Software Engineering: Theory and Practice Software Development: Theory and Practical application", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "About The Syllabus", "content": "About The Syllabus Registration Number GU 2024/2323 Date of Entry Into Force 2025-03-15 Decision Date 2024-11-08 Valid From holiday Autumn Term 2025 Decision Make Department of Computer Science and Engineering", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Position", "content": "Position The Course Can Be Part of the Following Programs: Computer Science, Bachelor's Program (N1COS) Computer Science, Masters Program (N2COS) Software Engineering and Management, Masters Program (N2SOF) The Course is a Also", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Entry Requirements", "content": "Entry Requirements The Student Must Know Java Programming and Must have successfully completed Courses on Data Structures and Algorithms (E.G., DRA183) as well as on Object-Oriented Programming (E.G., Dit044, Dit954) of 7.5HP EACH.Applicants MUST Prove Knowledge of English: English 6/English B or the equivalent level of an international recognized test, for Example Toefl, IELTS.", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Content", "content": "Content the course \"Software Engineering: Theory and Practice\" is designed to equip students with the Knowledge and Skills Necessary to Develop, Manage, and Maintain Software Systems Across Varior Industries.Starting with a foundation in General Software Engineering Principles, Students Will Explore The Much Challenges of Design Software Architectures, Requirement Engineering, and Testing Strategies.The Course Contains Specialized Topics Such As Real-Time Software Engineering, Software Reuse, and the Development of Learning-Nabled Systems, Emphasing the Unique Challenges these systems present.PartICULAR ATTENTION IS Given to Safety-Critical Software Engineering, Essential for Sectors Like Automotive and Aerospace, Where Reliability and Compliance with Stringent Standards Are Paramount.", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Objectives", "content": "Objectives on Successful Completion of the Course The Student Will Be Able To: Knowledge and Understanding Understand The Core Principles of Software Engineering, Including Various Software Development Life Cycles (SDLC), REQUIRES ARCHITES Engineering.Describe strategies for software testing, maintenance, and evolution, as well as methods for real-time and safety-critical software engineering.Recognize the Challenges and Strategies of Integrating Software in Complex Systems and Specific Concerns in Machine Learning Components.Competence and Skills Utilize Professional Tools for Developing, Testing, and Analyzing Software Projects.Design and Evaluate Scalable, Maintainable, and Effect Software Architectures.Apply Software Engineering Principles to Develop Solutions In Specialized Areas Such As Real-Time, Safety-Critical, and Learning-Nabled Systems.Judgment and Approach Critically Assess Different SDLC Models and Software Engineering Techniques to Determine their effectiveness for specific projects.Evaluate and Integrate Software Solutions Across A Variety of Applications, Including Real-Time, Safety-Critical, and Learning-Nabled Systems.Understand How Software Development Practices are Applied in Sectors Like Finance, Telecommunications, and Automation.", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Form of teaching", "content": "Form of Teaching There Will Be Lectures and Exercise Sessions.The sessions are a base to the individual assignments which are designed for the students to be familiar with practice applications of theoretical concepts taught in the lectures and professional software engineering tools.LANGUAGE OF INSTRUCTION: English", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Examination formed", "content": "Examination Formats The Course Is Examed by Individual Exam and A Set of Homework Assignments Normally CARRIED OUT IN GROUPS OF STUDENTS.If a student who has been failed twice for the same examination element wishes to change examiners before examination session, such a request is to be granted unless there are specific reasons to the contrary (Chapter 6 Section 22 HF).If a Student Has Received A Certificate of Disability Study Support From the University of Gothenburg with a recommendation of adapted examination and/or adapted forms of assessment, an examination may decide, if this is Consistent with the Course's dented lesWOULD BE NEEDED, TO GRANT THE STUDENT ADAPTED EXAMINATION AND/OR Adaped Forms of Assessment.If a Course has been discontinued or undergone Major Changes, the student must be victimed at the Least Two Examination Sessions in Addition to Ordinary Examination Sessions.These sessions are to be spread over a period of at least one year but no more than two years after the course has been discontinued/changed.The Same Applies to Placement and Internship (VFU) Except that this is restricted to only one further examination session.If a Student has been notified that they fulfil The Requirements for Being a Student at National University (Riu Student), to Combine Elite Sports Activities With Studies, The Examiner is Entitled to Decide on Adaptation of Examinations If This Is Done In Accordance What the The Locordance WHESGothenburg.", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Grades", "content": "Grades Sub-Courses Written Hall Examination, 2.5 Credits Grading Scale: Pass with Distinction (5), Pass with Credit (4), Pass (3) and Fail (U) Assignments, 5 Credits Grading Scale: Pass with Distinction (5), Passport with Credit (4), pass (3), pass (3), pass (3), pass (4)Individual Written Exam (2.5 HEC) and Completion of Mandatory Homework Assignments (5 HEC).In Order to Pass the Course, Both The Final Exam and the Homework Assignment have to be passed.The Final Grade Will Be Based On The Following: Written Hall Examination * 0.33 + Assignments * 0.67, Rounded to the nearest integer.", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Course evaluation", "content": "Course evaluation the course is evaluated through meetings Both during and after the course between teachers and student representatives.Further, an Anonymous Questionnaire is used to Ensure Written Information.The Outcome of the Evaluations Serves to Improve The Course By Indication which Parts Could Be Added, Improved, Changed or Removed.", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Other regulations", "content": "Other Regulations The Course Is A Joint Course Together with Chalmers.The Course Replaces the Course Dit593, 7.5 Credits.The Course Cannot Be Included in a Degree Which Contains Dit593.Neither can the course be included in a defare which is based on ankher Degree in which the course dit593 is included", "origin_link": "https://www.gu.se/en/study-gothenburg/software-engineering-theory-and-practice-dit592/syllabus/7a31ac97-a26f-11ef-a309-15d1eab44478", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Mathematical Sciences", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "MMGD00 Introduction Course D, 1.5 higher education credits", "content": "Introductory Course D, 1.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Mathematical Sciences 2017-08-01 to apply from 2017-08-14, autumn term 2017.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Mathematical Sciences", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is an introductory course in mathematics and cannot be included in any college degree with mathematics as the main area.It is primarily aimed at students who have been admitted to a computer science program to give an introduction to college studies in mathematics and computer science.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Basic eligibility and mathematics E or Mathematics 4 (Area Authorization 9/A9, exceptions are given for physics B/2 and chemistry A/1).Alternative Mathematics D and any of the courses MMG000 introductory course or MMGK11 Natural Science Mathematics A1.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:\n\n- interpret descriptions of quantities and be able to describe the amounts symbolically,\n- Using the Purgery Power Operations,\n- use the concept of function and determine what properties a function has,\n- Understand the sum symbol and use it in practice.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Content", "content": "Quantity learning.Features and their properties.Operators.Sums.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Forms of teaching", "content": "Language Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Forms of assessment", "content": "The course is examined through a written exam at the end of the course.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, the request for a change of an examiner must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF 6 Chapter 22).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Rating", "content": "The course gives any of the grades approved (G) and failed (U).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Course evaluation", "content": "The course is evaluated with an anonymous survey.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Other", "content": "Participants must be admitted to any basic course in mathematics or computer science.\n\nFor literature list, see:\n\nhttps://www.chalmers.se/sv/sinstälens/math/utbilding/grundbilding-goteborgsuniversity/kurslitteratur/sidor/Kursliterature-i-matematik.aspx", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD00.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Data and information technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit700 computer introduction, 1.5 higher education credits", "content": "Introduction to Computer Programming and Environment, 1.5 Higher Education Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the IT Faculty Board 2007-09-06 and most recently revised 201506-24 by the Department of Computer and Information Technology.The revised syllabus is valid from 2015-08-19, autumn term 2015.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Data and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1n, basic level, only upper secondary prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Basic eligibility and mathematics D or Mathematics 3 C (Area Authorization 8/A8, exceptions are given for physics B/2, chemistry A/1).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "CASE", "content": "After completing the course, the student is expected to be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Explain the function of simpler small programs in a programming language", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- independently seek answers to programming -related questions\n- Develop simpler small programs in a programming language\n\nValuation and attitude\n\n- reflect on their own learning of programming", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "The course will give the student a basic introduction to learning how to program.The focus of the course is not on programming directly, but on the student's ability and learning process to take advantage of programming skills.The course aims to give all students, regardless of previous programming experience, tools and habits to learn further programming in subsequent courses.Different meta-cognitive concepts are included in the course such as reflection, self-assessment and planning of learning.The course introduces different concepts and techniques, such as variables, expressions and functions, as well as editing and driving of simple programs.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Forms of teaching", "content": "The main element of the course is a series of supervised programming sessions, where students work in groups in implementing applications themselves, where the difficulty is determined by their respective previous experience in programming.In connection with these passports, the course contains teacher -led reflection sessions in order to focus on learning.Finally, the course contains a workshop in study technology and procrastination.\n\nLanguage Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of assessment", "content": "The course is examined through programming tasks that are carried out in groups and are reported orally.In addition, compulsory presence is required at all scheduled course moments;hearing alerts, programming sessions, as well as a workshop in study technology and procrastination.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Rating", "content": "The course gives any of the grades approved (G) and failed (U).In order to get the grade approved on the course, approved programming tasks and participation are required in the compulsory schedules.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous survey can be used to obtain written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT700.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->\n\n\nDit441 Introduction to Functional Programming, 7.5 higher education credits Introduction to Functional Programming, 7.5 Credits Basic Level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Responsible Institutions:\n\nScientific 100 %\n\nDepartment of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Placement", "content": "The course is mandatory in computer science programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1n, basic level, has only high school prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Prerequisites", "content": "Basic eligibility and mathematics D or Mathematics 3 C (Area Authorization 8/A8, exceptions are given for physics B/2, chemistry A/1).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Knowledge and understanding", "content": "- Describe basic concepts in modern functional programming, such as: data types, features including higher order functions, lazy evaluation, endless data structures\n\n- Describe a basic set of programming techniques, such as: recursion, testing, using data types for modeling and problem solving", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Skills and ability", "content": "- Write small functional programs for different applications\n- Structure programs to make them easy to supply and change, through appropriate use of data types, abstraction, and reusable code\n- conducting effective testing of functional programs using appropriate tools", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Valuation and attitude", "content": "- show skills to assess in different programming contexts which programming techniques are best suited to solve the current problem", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "This is an introductory course in programming that uses a functional programming language.The primary purpose is to teach basic computer science concepts, while students learn to write small programs.Secondary goals are to provide a basis for upcoming courses (specifically data structures, algorithms, digital circles, formal methods and courses in program language).\n\nSpecific topics dealt with in the course are:\n\n- values, types and features\n- Composite data structures (lists, tupler, user -defined types)\n- higher order functions\n- Use of abstraction mechanisms to avoid repetitive programming\n- recursion and recursive data types\n- effective and ineffective programs\n- Input-output\n- Verification using testing", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Sub -courses", "content": "1. Written exam (Written Examination), 4.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and failed (U)\n\n2. Laboratory (Laboratory Work), 3 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "The teaching consists of lectures, group meetings and supervised programming exercises.\n\nLanguage language: Swedish and English course may be given in Swedish or English.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "The course is examined through an individual written examination, as well as a number of compulsory laboratory work normally carried out in a group of 2-3 students.\n\nIf a student who has been rejected twice at the same graduated element wishes to change the examiner for the next examination, such a request shall be submitted in writing to the institution and approved if there are no special reasons, however (HF Chapter 6 §22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo be approved on the course, both modules must be approved.The grade for the entire course is decided by the written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nStudents who already have programming skills are encouraged to choose your 143 functional programming instead.\n\nThe course replaces the course Dit440, 7.5 credits.This course cannot be included in a degree containing there 143 or its 440.Nor can it be part of a degree based on another degree that includes 143 or its 440.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT441.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit984 Discreet Mathematics for Computer Nethers, 7.5 higher education credits", "content": "Discrete Mathematics for Computer Scientists, 7.5 Credit's basic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is compulsory in the Bachelor's program Data Science Program.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1n, basic level, has only high school prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Basic eligibility and mathematics E or Mathematics 4 (Area Authorization 9/A9, exceptions are given for physics B/2, chemistry A/1).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Explain terminology and properties of commonly found discrete structures (such as integers, tree structures, and graphs) in computer science)\n\n- Explain proof techniques (as proof of contradiction and structural induction) for discrete structures and iterative processes", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- select and apply appropriate discrete structures to describe and reason about ordinary computer science situations;\n- bring and present your own mathematical reasoning and evidence;\n\nValuation and attitude\n\n- Identify and use suitable mathematical tools in common situations that arise in computer science;\n- Assess and criticize mathematical reasoning and evidence performed by a third party.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "The course provides basic knowledge of discreet mathematical structures that are needed as prerequisites for further college studies in computer science and computer technology.The course emphasizes the important role of mathematics in the student's future studies and in the data area as a whole.\n\nThe course provides a concrete picture and forward-looking of both the major classic basic issues in computer science (eg Haltting problem, P vs. NP), as well as the major current challenges in the data field (eg \"big data\", multi-core revolution), and what role mathematics plays in these issues.\n\nThe course motivates relevant mathematical concepts and techniques using computer science and computer technology examples (eg programming problems, hardware design, cryptography, network algorithms, time estimate of programs).\n\nThe following proof technicians are reviewed in the course:\n\n- Certificate of contradiction\n- structural induction over tree structures\n- proof with the help of invariants\n\n- reasoning about the correctness of recursive programs and iterative processes\n- pre- and postal conditions\n\nThe following mathematical concept is reviewed in the course:\n\n- quantities, features, relationships\n- integer arritmetics, sums of series\n- Buds logic, predicate logic\n- Graphs, tree structures\n- Combatatory", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Sub -courses", "content": "Rating scale: very well approved (5), well approved (4), approved (3) and\n\n1. Written exam (Written Exam), 5 credits failed (U)\n2. Written submission duties (Written Assignments), 2.5 credits rating scale: Approved (G) and Failure (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "The teaching will be done with the help of lectures and group exercises with supervisors.\n\nLanguage Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "The course is examined through written assignments during the course and an individual written examination at the end of the course.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo be approved on the course, both modules must be approved.The grade for the entire course is decided by the written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The course uses computerized tools (eg programming, Constraint solver, theoretical evidence) in tasks to concretize the content and link between mathematics and studies in the data area.\n\nThe course replaces the course dit980, 7.5 credits.This course cannot be included in a degree containing there 1980.Nor can it be part of a degree based on another degree where it 1980 is included.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT984.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit013 imperative programming with basic object orientation, 7.5 higher education credits", "content": "Imperative Programming With Basic Objector Oorientation, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is compulsory in the bachelor's programs computer science program and the mathematics program and is also given as an independent course.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS), 2) Computer Science Program (NDATM) and 3) The Mathematics Program (N1MAT)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Approved course in programming, for example DRA440 Introduction to functional programming 7.5 credits or MVG300 programming with Matlab, 7.5 credits.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- account for the concepts and constructions used in imperative programming;\n- Describe and apply some standard algorithms, for example sorting and searching, as well as knowing where these are found in the language's standard library;\n- Provide a basic account of objects and classes.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- use basic software development tools;\n- Implementing simple and well -structured imperative programs according to informal specification;\n- carry out an effective testing of these using appropriate tools;\n- Use predefined data structures, such aslists and fields (arrays);\n- Construct simple programs using classes and objects.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Compare and evaluate different aspects of program quality based on completed theory.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course deals with imperative programming and algorithms in an object -oriented programming language.\n\nThe first part of the course presents imperative techniques and concepts:\n\n- Programming with permission;\n- Basic about types, primitive types and reference types;\n- Literals, variables, initiation and allocation;\n- Value and reference semes and alias problems;\n- Declarations, operators, expressions, sentences and governing sentences (selection, iteration);\n- Use of ready -made standard classes for I/O Handling and data structures for collections (eg lists);\n- fields (arrays);\n- Algorithms for e.g.search, sorting;\n- Methods and parameter transfer;\n- Error management.\n\nThe second part of the course gives a minimal introduction to the object -oriented environment:\n\n- Basic concept in writing your own class, ie constructors, instance/class variables, instance/class methods and institution;\n- Introduction to implementation heritage;\n- Use of standard features to draw graphics.\n\nThe course also addresses working methods, idioms, basic quality aspects and testing and troubleshooting.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "Rating scale: very well approved (5), well approved (4), approved (3) and\n\n1. The exam (Written Exam), 6 credits failed (U)\n2. Written exercises and computer lab (Written Exercises and Computer\n3. Assignments), 1.5 credits rating scale: Approved (G) and Fail (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Lectures, exercises and computer lab.\n\nLanguage Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through an individual written exam (6 h, 0p) and written exercises and computer lab (1.5 credits) performed in groups of normally 2 students.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo be approved on the course, both modules must be approved.The grade for the entire course is decided by the written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by the fact that\n\nShow on parts that can be added, improved, changed or removed.\n\nThe result and possible changes in the course's arrangement should be communicated to both the students who completed the valuation and to the students who will start the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "Course literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces DRT012 Imperative programming with basic object orientation, 7.5 credits.This course cannot be included in a degree containing there012.Nor can it be part of a degree based on another degree that includes it012.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT013.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit792 Basic Computer Technology, 7.5 higher education credits", "content": "Introduction to Computer Engineering, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is included in computer science programs, bachelor's programs, and is also given as an independent course at the University of Gothenburg\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1n, basic level, has only high school prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Basic eligibility and mathematics E or Mathematics 4 (Area Authorization 9/A9, exceptions are given for physics B/2 and chemistry A/1).Alternative Mathematics D and any of the courses MMG000 introductory course or MMGK11 Natural Science Mathematics A1.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Describe binary codes such as NBCD code, alphanumeric codes, exces codes and gray code\n\n- Describe addition and subtraction with 2- and 10-complementary arritetics.\n- Describe the computer structure and function, at block level show how controller, data road, register file, arithmetic and logic unit (ALU) are linked to a central unit at block level\n- Describe and analyze the function and structure of the automatic control unit and explain how instructions are built up by control sequences\n- Explain the principle of the stored program\n- Describe a programmers' image of a processor, (instruction set and addressing method)\n- Describe elementary exception management in computer systems.\n- Describe different types of memory technologies such as rum, prom, flash, static frame and dynamic frame.\n- Explain the concept of memory hierarchy.\n- Describe synchronous and asynchronous bus protocols and multiplex technology.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Describe and use binary codes for arithmetic.\n- perform the transformation of speech between decimal, binary and hexadecimal representation.\n- perform addition and subtraction with binary integers without signs.\n- Perform addition and subtraction with binary numbers with 2-complementaritetics.\n- Perform multiplication and division with binary integers.\n- With the help of booles algebra, describe, analyze and construct such combinatorial networks (such as voters, distributors, healing, bit shifters, etc.) that are typically used to build a computer central device\n- With the help of Bolesh Algebra, describe and analyze such sequence networks (memory elements and calculators) that are typically used to build a computer's central unit.\n- Analyze/construct a simple ALU and design control signal sequences for basic aluminum operations\n- Analyze a simple data road, as well as construct and design control signal sequences for transfers between registers, ALU and memory.\n- Describe, analyze and construct simple assemblers programs, organized in subutins.\n- Translate code between machine and assemblers programs (assemble, disassemble)\n- Describe and analyze decoding logic for primary memory with digital components.\n- describe and analyze simple memory -addressed IO with digital components\n- Describe and explain the most common primary memory technologies (static/dynamic frame, rum and flash memories).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Have the ability to understand the interaction between hardware and software.\n- have insights into how basic knowledge of computer technology is a prerequisite for being able to understand and work on issues related to computers' performance, energy consumption, environmental impact, real -time properties, reliability and vulnerability to data breaches.\n- Analyze and construct control signal sequences based on instructions' semantics.\n- With the help of booles algebra, construct sequence networks (memory elements and calculators) that is typically used to build a computer's central unit with the help of booles algebra.\n- Construct decoding logic for primary memory with digital components.\n- Construct simple memory -addressed IO with digital components.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course provides an understanding of the computer's structure and functioning method and thereby a very good theoretical and practical basis for further studies in both computer technology and programming technical courses.\n\nThe course deals with the following areas:\n\n- the basic elements and concepts of digital technology and different speech systems\n- Bolesh Algebra's use for the construction of combinative networks and synchronous sequence nets\n- The computer's digital building blocks (alu, data road, controller, memory, inputs and outses)\n- The structure of the traditional processor (data road and control unit with instructional set) as a synchronous working digital machine\n- Programming in machine language and assembled language.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Written Hall (Written Hall Examination), 4.5 credits Rating scale: Very well approved (5), well approved (4), approved (3) and Fail (U)\n2. Laboratory (Laboratory Work), 3 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Language Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "Mandatory laboratory work and written exam.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such request must be submitted in writing to the institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, a student must be guaranteed at least three examinations (including regular examinations) for a period of at least one year, however, as long as two years after the course has ceased/changed.As regards internship and VFU, the same applies, but with limitation to only an additional examination.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo be approved on the course, both modules must be approved.The grade for the entire course is decided by the written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit791, 7.5 credits.This course cannot be included in a degree containing there 791.Nor can it be part of a degree based on another degree where 791 is included.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT792.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "DAG954 Object -oriented programming and design, 7.5 higher education credits", "content": "Object-Oriented Programming and Design, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2020-12-18 and most recently revised 2023-10-24.The revised syllabus is valid from 202401-15, autumn term 2024.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution:\n\nDepartment of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is mandatory in computer science programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Approved grade in the course DRT013 imperative programming with basic object orientation, 7.5 credits or equivalent.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:\n\nKnowledge and understanding\n\nAccount for concepts within object-oriented design, such as objects, classes,\n\nEmpire and polymorphism, using adequate terminology.\n\nDescribe object-oriented design principles (eg single Responsibility Principle, Open-Closed Principle).\n\nDescribe different object-oriented design patterns, including their purpose and effect.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Skills and ability", "content": "Imore and account for basic object -oriented concepts, such as classes and objects, primitives and references, methods and constructors, variables and attributes, etc.\n\nImplement and account for more advanced language mechanisms and techniques, such as error management, generic, lambda expression, etc.\n\nImplement and account for inheritance and parameterized types, and associated mechanisms, to achieve polymorphism and code reuse.\n\nIdentify and implement design principles and design patterns to\n\nachieve healthy object-oriented design.\n\nDesign, implement and refactorize object -oriented programs for a given domain in a healthy manner with regard to correctness, modifiability and reusability.\n\nPerform and describe testing of object -oriented programs.\n\nDesign a clear and well -structured reasoning text, according to basic principles for argumentation and discussion.\n\nCommunicate object-oriented design and source code orally and in writing, as well as visually using charts (eg class charts).\n\nIdentify and apply active methods for inclusive collaboration in groups.IN", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Valuation and attitude", "content": "Argue for made design and implementation choices according to principles for good object-oriented design and implementation.\n\nEvaluate programs according to how well they can be understood and modified, for example through connection and cohesion between classes and methods.\n\nEstimate how changes affect a software design.\n\nReflect on various strategies that promote inclusive collaboration in groups.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "The course introduces the object-oriented programming paradigm, as well as an object-oriented high-level programming language with associated platforms and integrated development environments (idea), and attaches great importance to object-oriented concepts applied to the creation of programs, and design of software applications.\n\nConcept apparatus and technology are expanded and deepened: methods, objects, types and polymorphism, inheritance and overshadowing, error handling, testing, etc.\n\nDesigner aspects are introduced: common principles for good object-oriented design;\n\nnaming, handling of addictions, modular programs, and mutability;Design patterns and MVC model;Class and object charts.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Sub -courses", "content": "1. Written Hall (Written Hall Exam), 3 credits failed (U)\n\nRating scale: very well approved (5), well approved (4), approved (3) and\n\n2. Laboratory (Laboratory Work), 3 credits\n\nRating scale: approved (g) and failed (u)\n\n3. Submission tasks (assignments), 1.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "Exercises, lectures and computer lab.\n\nLanguage Language: English and Swedish\n\nThe course is given in Swedish and English occurs", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "The course is examined through a written exam (3 credits), laboratory work (3 credits), and submission tasks (1.5 credits).The laboratory is performed in groups of normally 3 students.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nThe course gives some of the grades failed (U), 3, 4 or 5.\n\nIn order to have the grade approved (3) on the entire course, the student must have received the grade approved on all compulsory components.To get the grade 4 or 5 on the entire course, the student must receive the corresponding higher grades on all compulsory components.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course is evaluated through both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The course is collected with Chalmers.\n\nThe course replaces the 952 object -oriented programming and design, 7.5 credits.This course cannot be included in a degree containing dit952.Nor can it be part of a degree based on another degree that includes 1952.\n\nCourse literature will be published no later than 8 weeks before the course starts.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT954.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Mathematical Sciences", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "MMGD21 Linear Algebra D, 7.5 higher education credits", "content": "Linear Algebra D, 7.5 Credits Basic Level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Mathematical Sciences 2023-06-13 to apply from 2024-01-15, spring term 2024.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Mathematical Sciences", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is one of the three basic, compulsory, mathematics courses in computer science programs.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nMathematics\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "In addition to basic eligibility, knowledge corresponding to the course DRA984 discreet mathematics for data scientists is required.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After completing the course the student should be able to\n\n* Apply geometric vectors in geometry and science\n* account for coordinate systems as well as the equations of planet and line\n* Apply both scalar and vector product\n* account for matrices and matrix algebra\n\n* interpreting determinants such as volumes or areas\n* account for the eagerness problem for matrices\n* Using Python for problem solving in linear algebra.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Content", "content": "Matrices and vectors, linear images, equation systems, eigencies and eigencies, linear (o) dependence, bases and dimensions, relationship matrixs.The applications are largely about discreet mathematics and other things that are relevant to computer technology.Python is used to show a mathematical software that is helpful in analysis of linear problems.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Forms of teaching", "content": "Language Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Forms of assessment", "content": "The examination consists of a written exam and compulsory computer lab.During the course, elements that give bonus points for the exam may occur.Examples of such elements are dews, assignments or laboratory work.Information for the current course opportunity is provided via the course website.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, the request for a change of an examiner must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF 6 Chapter 22).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Course evaluation", "content": "The course is evaluated through an anonymous survey and/or conversation with student representatives.The result and possible changes in the course's arrangement should be communicated to both the students who completed the valuation and to the students who will start the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Other", "content": "The course MMGD21 linear algebra D has the same content as the course mmgd20 linear algebra D. It is not allowed to be registered and/or examined on more than one of these courses.\n\nFor literature list, see:\n\nhttps://www.chalmers.se/sv/sinstälens/math/utbilding/grundbilding-goteborgsuniversity/kurslitteratur/sidor/Kursliterature-i-matematik.aspx\n\nPrevious versions, ieApplicable even2012-06-30, of the syllabus for MMGD20 is not in Guba's syllabus database.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MMGD21.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "DAG962 DATA structures, 7.5 higher education credits", "content": "Data Structures, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 and most recently revised 2023-11-09.The revised syllabus is valid from 202501-20, spring term 2025.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is compulsory in computer science program, bachelor's program and it is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Mathematical sciences, master's programs (N2MAT) and 3) Mathematics program (N1MAT)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "To be eligible for the course, the student must have completed:\n\n- 7.5 credits imperative or object -oriented programming (eg, 1013 imperative programming with basic object orientation, or equivalent)\n- 7.5 credits Functional programming (eg, DRA441 Introduction to functional programming, or equivalent)\n- 7.5 credits Discrete mathematics (eg Ditxxx Discrete Mathematics for Software Engineering, DRA984 Discrete Mathematics for Data Washers, Introduction", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- account for basic abstract data types and data structures, including lists, queues, hash tables, trees and graphs\n- account for some of the algorithms used to effectively manage these data structures, and explain why they are correct", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- apply basic abstract data types and data structures, as well as algorithms related to these\n- Implement and use abstract data types as interfaces, and data structures such as classes, in an object -oriented programming language\n- read, specify and describe algorithms, at a higher level of abstraction than program code\n- implement and use abstract data types and data structures in a functional programming language", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Analyze the efficiency of basic algorithms and data structures\n- make well -founded choices between different data structures and algorithms for different applications", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "Data structures and algorithms are basic building blocks in almost all software.Knowledge and skills in data abstraction, data structures and algorithms are necessary in construction, use and maintenance of changeable, reusable, accurate and effective program components.\n\nThe course provides knowledge and skills in the construction and use of algorithms and data structures, introduction to algorite manaly and data abstraction, as well as insights into the benefits of data abstraction in program development.\n\nThe following topics are covered by the course:\n\n- Abstract data types\n- Data structures and algorithms, focusing both on imperative, object -oriented, and functional programming language\n- Differences between lazy and strict evaluation of functional data structures\n\n- Common data structures, such as fields (arrays), linked lists, unbalanced and balanced trees, heapar and hash tables\n- How these can be used to implement abstract data types, such as poor, queues, priority queues, depictions, quantities and graphs\n- Standard algorithms for these data structures, including their resource requirements\n- Search and sorting algorithms\n- to use different libraries for data structures and algorithms\n- Basic complexity analysis of data structures and algorithms", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Sales exam (Written Hall Exam), 4.5 credits failed (U)\n\nRating scale: very well approved (5), well approved (4), approved (3) and\n\n2. Laboratory (Laboratory Work), 3 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "The teaching consists of lectures, exercises and laboratory work with guidance.\n\nLanguage Language: Swedish and English\n\nThe course is given in Swedish, but English may occur.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through a written exam (4.5 credits), and assignments carried out in a group (3.0 credits).\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nThe final grade according to the scale very well approved (5), well approved (4), approved (3) and failed (U), is determined on the basis of the grade on the screaming exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course can be read with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the 961 data structures 7.5 credits.This course cannot be included in a degree containing there 1961.Nor can it be part of a degree based on another degree that includes 1961.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT962.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit392 Principles for parallel programming, 7.5 higher education credits", "content": "Principles of Concurrent Programming, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is compulsory at the bachelor's level within the computer science program and is also given as a standalone course at the University of Gothenburg.\n\nThe course can be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Mathematical Sciences, Master Program (N2MAT), 4) Software Engineering and Management Master Program (N2SOf), 5) Mathematics Program (N2SOf), 5) Mathematics Program (N2SOFProgram (N2Som) and 7) Applied Data Science Master Program (N2ADS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "The student must have completed the least\n\n- 7.5 credits in imperative/object -oriented programming such as dit012, dit948 or equivalent,\n- An additional course in programming or data structures.\n\nIn addition, the student should have knowledge of batch logic that is achieved by, for example, having completed its 1980, dit725, the introductory algebra from MMG200, or the equivalent.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Knowledge and understanding", "content": "- Demonstrate knowledge about the issues and problems that arise when constructing correct parallel programs,\n- Identify synchronization problems typical of parallel programs, such as race conditions and mutual exclusion,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Skills and ability", "content": "- Apply ordinary designs, such as locking, semaphors and message -driven synchronization to solve parallel programming problems,\n- be able to use techniques, especially intended for parallel programming, in modern parallel programming languages,\n- Implementing solutions with common designs in modern programming languages,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Valuation and attitude", "content": "- Evaluate the forces and possible weaknesses within the parallel programming paradigm,\n- assess whether a program, a library, or a data structure is secure for use in a parallel programming problem,\n- Choosing correct language structures to implement synchronization and solving communication problems between different calculation units.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Content", "content": "Parallel programming has become commonly found in different types of systems, for example to speed up calculations where physical parallelism can be utilized, to provide interactive multi -user environments, and to manage interaction with asynchronous external events.\n\nThe course aims to provide an introduction to the principles that form the basis for parallel systems, as well as practical programming solutions for modeling where it is used simultaneously in programs.Areas where these principles and practice are relevant include operating systems, distributed systems, real -time systems and multi -core architectures.\n\nConcepts treated in the course are:\n\n- Physical versus logical parallelism\n- Problems that may arise in simultaneity (race conditions, exclusion, deadlock, justice, 'live lid'))\n\n- Mutual exclusion\n- synchronization with shared memory (with semaphors or fine -grained locking)\n- Message -driven synchronization (with message queues)\n\nThe course highlights practical programming solutions for parallel programming with both imperative and functional programming languages.\n\nThe course provides a brief introduction to functional programming in general and of the functional programming language used in the course, intended to provide a sufficient background to understand and use abstractions illustrated by functional languages.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Sub -courses", "content": "1. The exam (Written Exam), 4.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and failed (U)\n\n2. Laboratory (Laboratory Work), 3 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of teaching", "content": "Lectures, exercises and laboratory occasions.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Forms of assessment", "content": "The course is examined through an individual written exam (4.5 credits), conducted in the examination hall and laboratory tasks (3.0 credits) which is normally carried out in pairs by students.The entire course rating is then determined by the points on both the laboratory part and the written exam.\n\nIf a student who has been rejected twice at the same examined element wishes to change the examiner for the next examination opportunity, such request shall be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6 22)\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nIn order to get approved on the course, all compulsory elements must be approved.To get a higher grade than approved, a higher weight is required on the compulsory elements.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Course evaluation", "content": "The course is evaluated through both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 17, "heading": "Other", "content": "Knowledge in functional programming (corresponding to eg DR) is part142 or there) is a merit but no requirement.The course replaces the course DRA390 Concurrent programming, 7.5 credits.\n\nThe course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit391, 7.5 credits.This course cannot be included in a degree containing there391.Nor can it be part of a degree based on another degree where there391 is included.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT392.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Mathematical Sciences", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "MSG810 Mathematical statistics and discreet mathematics, 7.5 higher education credits", "content": "Mathematical Statistics and Discrete Mathematics, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Mathematical Sciences 2015-03-26 and most recently revised 2020-01-31.The revised syllabus is valid from 2020-08-31, autumn term 2020.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Mathematical Sciences", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course may be included in the following programs: 1) Computer Science Program (N1COS), 2) Physics, Bachelor's Program (N1fys) and 3) Hospital Physical Program (N1SJU)\n\nMain area\n\nRecess\n\nMathematical statistics\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Basic knowledge in discreet mathematics, linear algebra and one -variable analysis.Exceptions are given for discreet mathematics for program students at physics, bachelor's programs (N1fys) and the hospital physicist program (N1SJU).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:\n\n- Identify problems in technical studies and in particular studies in information technology, which are suitable to treat with fundamental concepts and methods in probability theory and statistics.\n\n- Describe and analyze such problems with concepts and methods in statistics and discreet mathematics.\n- Apply basic statistical methods such as point and interval assessment, hypothesis testing and linear regression in problem solving.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Content", "content": "The elements included in the course are:\n\n- Probability theory and Markov chains - stochastic variables, waiting value, variance, correlation, conditional probabilities, the law of the speech, the central limit value.\n- Statistics - estimates, confidence interval, test.\n- Combatatory - combinations, permutations, generating functions.\n\nIn the probability theory, the emphasis is placed on discreet models.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Forms of teaching", "content": "The teaching is built around themes.Mathematics involved is presented in a review and is then studied deeper within the framework of the other course activities consisting of:\n\n- Lectures that illustrate and explain the mathematical theory.\n- Lessons where tasks related to the theory are solved individually and in groups.\n\nLanguage Language: Swedish and English\n\nThe teaching language can be either English or Swedish depending on the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Forms of assessment", "content": "Written exam.Mandatory assignments.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Rating", "content": "The course gives any of the grades well approved (VG), approved (G) and failed (U).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Course evaluation", "content": "The result and possible changes in the course's arrangement should be communicated to both the students who completed the valuation and to the students who will start the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/MSG810.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit084 Testing, troubleshooting & amp;Verification, 7.5 higher education credits", "content": "Testing, Debugging and Verification, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course Testing, troubleshooting and verification, 7.5 credits, is part of the computer science program at the candidate level.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Software Engineering and Management Master Program (N2SOF) and 4) Applied Data Science Master Program (N2ADS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "In order to be eligible for the course, the student must have completed at least 45 credits of an education aimed at a candy degree in computer science, Software Engineering, or the like.Within these 45hp, the student must have clarified:\n\n- A 7.5HP course in discreet mathematics (eg dit980)\n- A 7.5HP course in imperative/object -oriented programming (eg dit012 or dit953)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Knowledge and understanding", "content": "- Describe the scope and restrictions of both informal and formal techniques to detect, analyze and correct program errors.\n- Describe basic principles for writing precise specifications for software units.\n- Discuss basic principles in software verification.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Skills and ability", "content": "- Formulate precise specifications for software devices.\n- Character input for which a program goes wrong.\n- Locate, analyze and fix program errors.\n- reason formally about simple programs to guarantee correctness.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Valuation and attitude", "content": "- Assessing various techniques for troubleshooting and error prevention that can be found in a work context.\n- Contribute to the development and improvement of techniques for troubleshooting and error prevention in a given context.\n- Follow up and utilize conceptual and technological development in the areas of testing, troubleshooting and verification that go beyond the exact techniques covered by the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Content", "content": "The main purpose of the course is to provide the student with a basic understanding of techniques for dealing with errors in computer programs.Recurring themes are a) to identify software failure, b) Analysis thereof, and c) to remove errors.The course also provides an understanding of how to systematically go about it to make sure that a software unit really does what it should.\n\nThe course covers formal and informal methods, testing (terminology, coverage, device test, unit tests), troubleshooting (control, workflow, location, tool), formal specification (pre-/postal condition, invarianities), formal verification (logic, tool).The course affects imperative programming languages in general, with a more specific focus on object -oriented programming.\n\nAfter completing the course, the student must have understood - and have the ability to use methods for testing (systematically detect software fuel), troubleshooting (the process of isolating and correcting software fuel), and verification (to formally reason about programs to guarantee correctness).All of these methods depend on precise specifications for what the program should do.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Sub -courses", "content": "1. Written Hall (Written Hall Examination), 5 credits rating scale: Very well approved (5), well approved (4), approved (3) and Fail (U)\n2. Laboratory (Laboratory Work), 2.5 credits rating scale: approved (g) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of teaching", "content": "The course includes a combination of lectures, exercise sessions and assignments (labs).\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Forms of assessment", "content": "The course is examined through an individual written exam 5HP at the end of the course and laboratory tasks (assignments) 2.5HP.The assignments are normally made in groups of 2-3 students.If an assignment is not approved on the first attempt, the student may receive a second attempt.\n\nIf a student who has failed twice at the same examination element wishes to change the examiner for the next examination opportunity, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF 6 Chapter 22).\n\nIn the event that a course has ceased or undergone major changes, the student must be guaranteed access to at least three test cases (including ordinary test cases) for a period of at least one year based on the course's previous organization.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo be approved on the course, both modules must be approved.The grade for the entire course is decided by the written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Course evaluation", "content": "The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 17, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit083 Testing, troubleshooting & amp;Verification, 7.5 credits. This course cannot be included in a degree containing there083.Nor can it be part of a degree based on another degree where it is included there083.\n\nThis course cannot be included in a degree containing there 635.Nor can it be part of a degree based on another degree that includes 635.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT084.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit622 Databases, 7.5 higher education credits", "content": "Database, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2022-11-17 to apply from 2023-08-28, autumn term 2023.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is offered within several educational programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course can be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Mathematical sciences, Master Program (N2MAT), 4) The Mathematics Program (N1MAT) and 5) Applied Data Science Master Programs\n\nMain area\n\nRecess\n\nData science\n\nG1F, basic level, has less than 60 credits course/s on basic level as prerequisites G1F, basic level, has less than 60 credits\n\nComputer science\n\nCourse/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "In order to be eligible for the course, the student must have approved university courses of at least 45 credits, including:\n\n- At least 15 credits in programming, e.g.Dit440, Dit012, Dit953, or equivalent\n- At least 7.5 credits in mathematics or mathematical thinking, e.g.Dit980, dit855, or equivalent\n- Basic concepts in logic, quantities, functions and relationships, e.g.by there 1980,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Explain the semantic meaning of database issues using relationship algebra", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "-Construct an Entity Relationship chart for a given domain\n-Translate Entity Relationship diagram into relational database schedules\n- Apply concepts from the design theory to relational databases, e.g.functional dependencies and normalization\n- Download and modify data using database language for each task\n- Design a database interface using Constrats, Views, Triggers and Rights\n- implement a relationship database and its interface using a data definition language\n- Communicate with a database via an interface based on a software application", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Evaluate and create different models for a database domain using the entity Reliags hip charts and relationship schedules\n- Compare different data models, e.g.the relational and the semi -structured", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course covers the basic principles in database systems from the perspective of the user, programmer and database administrator.A laboratory task develops these themes as a running example throughout the course.The content of the course includes SQL as a language partly for the user to retrieve and modify data in an existing database and partly for the database administrator to create new databases, and partly for the programmer to call SQL from another language.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "From the content of the course:", "content": "-Entity Relationship modeling\n- functional dependencies and normalization\n- data collection and management with SQL\n- interface to databases based on other languages (eg Java/JDBC)\n-Overview of non-SQL models (eg JSON or XML)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Sub -courses", "content": "1. Written Hall (Written Hall Examination), 4.5 credits\n\n- rating scale: very well approved (5), well approved (4), approved (3) and failed (U)\n\n2. Laboratory (Laboratory Work), 3 credits\n\n- rating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of teaching", "content": "The course consists of lectures and practice occasions every week, as well as lab events with guidance.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Forms of assessment", "content": "Individual written examination and compulsory programming tasks.\n\nThe programming tasks are normally performed in groups of two students.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nIn order to be approved on the course, the student needs to be approved for both the programming tasks and the written salt exam.The final grade in the course is based on the grade on the written salt exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 17, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit621, 7.5 credits.This course cannot be included in a degree containing there 621.Nor can it be part of a degree based on another degree that includes 621.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT622.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit026 applied mathematical thinking, 7.5 higher education credits", "content": "Applied Mathematical Thinking, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-01 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is given as a standalone course at the University of Gothenburg.\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites G1F, basic level, has less than 60 credits course/s on basic level as prerequisites\n\nData science", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "To be competent, 7.5 credits in mathematics (analysis, linear algebra, discreet mathematics and/or mathematical statistics) are required.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:\n\nKnowledge and understanding\n\n- Explain different aspects of mathematical thinking: reasoning mathematical, problem solving, modeling.\n- Explain how mathematical thinking can be used in different areas of application.\n- Explain general mathematical knowledge and how it can be used (including functions, equations, derivatives and integrals, probabilities, sets, graphs).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Skills and ability", "content": "- Show a basic ability to use mathematical concepts and building blocks such as definitions, sentences, as well as different kinds of mathematical reasoning and evidence (to reason mathematically).\n- Show a basic ability to solve complex and unknown problems with a structured and investigative way of working (mathematical problem solving).\n- Show a basic ability to investigate real problems, determine whether and how they can be seen from a mathematical perspective and translate into mathematical problems, as well as adapt mathematical conclusions to the real problem (mathematical modeling).\n- Communicate about and with the help of mathematics.\n- Using different mathematical calculation tools as a natural part of working mathematically.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Valuation and attitude", "content": "- Identify how own thinking can be used to solve a problem, and to what extent previous knowledge can be used.\n- Show a reflective approach to the course content and your own thinking.\n- Show accuracy and quality in all work.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "The course is primarily intended to strengthen the students' mathematical thinking and ability to use such thinking in different applications and in further studies.The focus is not on new mathematical knowledge in the traditional sense, but on the often implied abilities required to effectively apply the mathematics one can, and in a constructive way learn new mathematics.The most important parts are to reason mathematical, problem solving and modeling.Significant aspects such as using the computer as part of mathematical thinking, as well as being able to communicate with and about mathematics is also a natural part of the course.The course therefore includes a certain element of driving and understanding simple given computer programs.\n\nThe course also introduces naturally basic mathematical knowledge that is useful in computer science and other areas, including a selection of high school\n\nMathematics course 4 and 5.\n\nBy developing mathematical thinking, the course complements other more traditional courses in mathematics, and by giving the student experience in different scope, bridging the gap between mathematical theory and relevant applications.\n\nThe core of the course is a number of carefully selected and highly varied exercise problems, which are used as a starting point for their own learning, where students develop their own abilities through an investigative way of working.To this is added lectures that provide an overall understanding, follow -up and perspective.The problems highlight many different areas of application, and their severity is adapted to practice the ability to think and work mathematically in different situations as efficiently as possible.\n\nIn connection with the exercise problems, we also discuss different problem -solving strategies, reflect on solutions and compare different ways to solve the same problems.We also orient about the role of mathematics in different applications and show the importance of mathematical computer models.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Sub -courses", "content": "1. Submission tasks (assignments), 7.5 credits rating scale: very well approved (5), well approved (4), approved (3) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "The course is mainly organized in modules.For each module, an introductory lecture is given, exercise tasks to solve, and a follow -up mandatory lecture that provides feedback on the solved tasks.\n\nLearning is supported by an interactive teaching style with a lot of contact between students and teachers.This is done during supervision hours where students solve the tasks and regularly discuss with the teachers.They then receive individual feedback and guidance in their own problem solving, and develop their independent ability.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "The course is examined through written exercise tasks and through a summary essay, where the student is encouraged to summarize and reflect on the course in a personal way.The exercise tasks and the thesis are normally carried out in groups of two students.In addition, each group of essays read by other groups, and discusses them in a final seminar.\n\nTo be approved on the thesis, the student must have shown a basic understanding of the course content, that the presentation and content of the report are correct and understandable.In order to get a better grade than approved on the thesis, the student must show a deeper understanding of the subject, describes their own insights and shows extra consideration for quality.\n\nIn order to be approved for the assignments, the student must show that the argument is correct and meets basic quality measures.To get a grade better than approved, the student must show deeper understanding in the subject, describe their own insights and show extra consideration for quality.\n\nAs a basis for the individual grading, students report in writing in writing their respective work within the group.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nIn order to obtain the grade approved, approved exercise information and approved essay are required.For an approved grade on the course, attendance is also required at certain lectures and the final seminar.\n\nIn order to get a higher grade than approved for the entire course, a higher weighted average of the grades from the exercise tasks and thesis is required.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The course is collected with Chalmers.\n\nSince the exercises are the most important thing in the course, there is no course literature in the traditional sense.For distributed material and see the course's website.\n\nThe course replaces the course Dit025, 7.5 credits.This course cannot be included in a degree containing there025, dit991, dit992, dit855 or dit856.Nor can it be part of a degree based on another degree there, there025, dit991, dit992, DR there855 or its 856 included.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT026.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit323 finite vending machines and formal languages, 7.5 higher education credits", "content": "Finite Automata and Formal Languages, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2023-01-16, spring term 2023.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is mandatory within the program N1CO's computer science program and through within a number of programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Mathematical sciences, master's program (N2MAT) and 4) The mathematics program (N1MAT)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "To be eligible for the course, the student must have completed 45 credits in computer science or mathematics, including the following courses:\n\n- 7.5 credits in discreet mathematics (for example, there 980, MMG200 or equivalent) - 7.5 credits in programming (for example, Dit440, Dit143, Dit012, Dit948, Dit953,\n\nMVG200 or equivalent)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Define different concepts in automatics and the theory of formal languages, such as (non-) deterministic vending machine, regular expression, regular language, context-free grammar, context-free language and turing machine.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Prove the properties of (some) languages, grammar and vending machines with rigorous mathematical methods.\n- Design finite vending machines, regular expressions and context -free grammatics that accept or generate certain languages.\n- Describe the language accepted by a finite vending machine or generated by a regular expression or context -free grammar.\n- Transform descriptions of regular languages between the following formalisms: deterministic and non -resetminic finite vending machines as well as regular expressions.\n- Simplify vending machines and context -free grammar.\n- decide whether a word belongs to a particular (regular or context -free) language.\n- Design Turing machines for simple tasks.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Manipulate formal descriptions of (some) languages, grammar and vending machines.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course is mainly about finite vending machines, regular expressions and context -free grammar.It also contains a brief introduction to Turing machines.Complete vending machines and regular expressions are simple calculation models.They are used, among other things, for lexical analysis, pattern recognition, and control of traffic signals.Furthermore, their theory can illustrate basic concepts in quantity learning and the doctrine of discreet structures.\n\nContext -free grammars are used to pars and analyze both artificial languages (for example, programming languages) and natural languages.Turing machines provide a more expressive calculation model.They help computer logs understand the restrictions of mechanical calculations by providing a precise definition of the algorithm concept.\n\nContent in a little more detail: Proof.Finite vending machines, regular expressions and related algorithms.Context -free grammar.Characteristics of regular and context -free languages.Short introduction to Turing machines.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Written exam (Written Examination), 4.5 credits rating scale: very well approved (5), well approved (4), approved (3) and failed (U)\n2. Submission tasks (assignments), 3 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Lectures, exercises.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through individual assignments and an individual written exam.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo get one of the grades 5, 4 or 3, you must receive the grade G on the sub -course assignments, and partly that you get approved results (5, 4 or 3) on the sub -course written hall.In that case, the grade on the entire course is the grade on the sub -course written hall exam.Otherwise, the grade on the entire course is U (failed).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by the fact that\n\nShow on parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit322, 7.5 credits.This course cannot be included in a degree containing there322.Nor can it be part of a degree based on another degree that includes 322", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT323.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "DRN 1997 MEAGE COMPUTERS, 7.5 GROUP GRESS", "content": "Communicating Computer Science, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2023-01-16, spring term 2023.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is mandatory in computer science programs.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "The prerequisite requirement is completed courses of 45 credits in the subject of computer science.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Identify what is good and ethical scientific writing and presentation in computer science;\n- summarize and highlight the main ideas in scientific text in computer science.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- effectively read scientific texts in computer science;\n- Write clear, concise and ethical scientific texts in computer science;\n- Communicate scientific results in computer science clearly to an audience with varying knowledge background;\n- use correct English, orally and in writing.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Critically review one's own scientific texts and texts written by others;\n- compare and analyze scientific texts in computer science;\n- Reflect on ethical aspects of scientific writing.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "A good computer scientist needs to be able to convey ideas and technical computer science concepts to other people effectively, both orally and in writing.\n\nIn this course, the student will look at existing presentations and texts, which include both good and bad examples, and learn about presentation technology and writing technology.The student's own oral presentations will be recorded with a video camera to enable the mandatory reflection task on how they can improve their presentation technology.The video recordings are made available only to the student himself and are not archived.By reviewing scientific texts, students will practice reading articles, identifying good and poor writing, and improving their own writing skills.The course will also deal with ethical aspects of scientific writing.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "Rating scale: very well approved (5), well approved (4), approved (3) and\n\n1. Subscription tasks (assignments), 7.5 credits failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Lectures, seminars, and group meetings.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The exam consists of three main parts: (1) to give oral presentations, (2) to write scientific texts, and (3) to review computer science texts.Some of these are made individually and some in groups of normally 2 people.\n\nIt is mandatory to participate in group meetings.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nIn order to obtain the grade approved (3) in the course, the students need to provide clear and well -structured presentations of ideas and technical concepts, and use clear and good English to summarize, explain, critically analyze and write texts correctly in computer science.The student must also have participated in group meetings and lectures.In order to obtain a higher grade (4 or 5) in the course, students need to perform significantly above the minimum requirements for grade 3. Examples of this are more detailed arguments and explanations in oral and written presentations, deeper critical analyzes and reflections in reviews, and higher quality in writing.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "Course literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course there 195, 7.5 credits.This course cannot be included in a degree containing there in 195.Nor can it be part of a degree based on another degree where it is included in 195.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT197.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit561 Bachelor's thesis in computer science, 15 higher education credits", "content": "Bachelor's Theis in Computer Science, 15 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2019-05-07 to apply from 2020-01-20, spring term 2020.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is mandatory in computer science programs.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG2E, basic level, has at least 60 credits course/ER on basic level as prerequisites, includes degree project for bachelor's degree", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "For access to the course, completed courses of at least 105 credits in computer science programs are required, including the course there in 195, convey computer science (7.5 credits) or the equivalent.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- identify an academically interesting problem within the computer science domain\n\n- Using scientific methodology to plan and implement a project\n- Use current practice in the subject area of computer science and apply it to a practical problem", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Formulate a relevant question within the project's subject area\n- systematically solve an academically interesting problem in the subject area of computer science\n- combine theories, models and/or methods relevant to the subject\n- Plan and implement a project in group and manage group dynamics with clear distribution\n- Document a joint work in a written report with clear clarification of one's own grant\n- Integrate knowledge in a systematic and critical way and present knowledge that is relevant in the subject area of Data Science\n- Communicate the results to an academic audience\n- search, obtain and review available literature and other background information relevant to the subject", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- describe the computer science domain relevant to that subject area\n- reflect on how the group collaborated to meet common goals\n- Critically review, evaluate and constructively question another candidate work on issues, implementation and results\n- Identify issues regarding the role of technology in society such as environmental and ethical aspects, within the scope of the specific investigation\n- reflect on the need for additional knowledge and propose future issues in the subject", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "During the course, the student will investigate an academically interesting problem in the subject area of computer science.In the candidate work, the student will integrate, deepen and develop their knowledge and skills in a limited area of what has been dealt with in previously completed courses within the program.\n\nThe student will carry out a major computer science project, applied or theoretical, in a group of normally 4-6 students, under the indulgence of a supervisor.The student documents this investigation in an essay that describes the problem, assumptions, methods, choices, results, evaluation of the work, including comparison with current work outside the projects.\n\nThe written part consists of an independently authored report, comprising the entire degree project, or a clearly identifiable part of a joint project report.\n\nThe main part of the candidate work consists of a project work.The student chooses the subject area through his choice among the projects offered.In order to facilitate and support the candidate work, a number of general competencies are also dealt with, which are translated into practical application within the project.Particular emphasis is placed on training in reporting one's own work, both orally and by independently writing part of a report that should be readable for an intended readers.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "The candidate work is mostly carried out as a project work.The work is conducted in a project group about normally 4-6 people.Guidance is given within the project's subject area and within the general competencies.\n\nLanguage Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "The candidate work is examined through a written report in accordance with current standards for scientific and technical reporting, which is presented orally and defended at a seminar.The individual student must write a clearly identifiable part of the joint report, which should be described in the project diary.\n\nThe student must also critically review another bachelor's work, partly in a written opposition report and partly by being an opponent during the seminar when this candidate work is presented.In examination, weight is attached to quality of project report, project diary, oral presentation and opposition, linked to the learning objectives of the candidate work.\n\nThe examiner is responsible for ensuring that the report is checked in a plagiarism tool.\n\nThe course includes interim reports to be submitted by the project group for continuous control and feedback on the progress of the work.Participation in the reports is mandatory.\n\nTo be approved on the course is also required:\n\n- completed and approved planning report\n- Participation in all compulsory elements\n\nIf a student who has failed twice at the same examination element wishes to change the examiner for the next examination opportunity, such request shall be submitted in writing\n\nto the institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, a student must be guaranteed at least three examinations (including regular examinations) for a period of at least one year, however, as long as two years after the course has ceased/changed.As regards internship and VFU, the same applies, but with limitation to only an additional examination.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades well approved (VG), approved (G) and failed (U).The requirement to be approved on the course (G) is that the student in the written dissertation shows the ability to formulate and investigate a relevant computer science problem.The student is expected to show skills in systematically solving this problem by applying a scientific method and planning and conducting a study appropriately.The student must be able to discuss the basics of the subject in a relevant and critical way.In the written report, the student should be able to use terminology usually in the problem domain and show the ability to apply theories and models that are relevant to the subject.\n\nAn attempt to critically reflect on the problem and its scientific basis with the support of scientific literature are required.In addition, an approved planning report, an approved presentation, and participation in all compulsory elements is required.\n\nThe requirement that well approved (VG) is that the student in the written report shows the ability to formulate and investigate a problem that is relevant to the computer science domain.The student is expected to show skills in systematically solving this problem by applying a scientific method and planning and conducting a study appropriately.In addition, the student should be able to discuss the basics of the subject in a thorough way.In the written dissertation, the student must critically reflect on theories and models, that is, literature, and critically assess strengths and weaknesses that characterize the completed study.This includes the use of a wide range of relevant references to support the argument, discuss and analyze any contradictory aspects and to illustrate a deeper understanding of the difficulties that arise in a scientific approach to the problem by synthesizing information that is relevant to solve the problem.\n\nIn addition, an approved planning report, an approved presentation, and participation in all compulsory elements is required.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The course is collected with Chalmers.\n\nThe course replaces the course there560, 15 credits.This course cannot be included in a degree containing there560.Nor can it be part of a degree based on another degree where 560 is included.\n\nFor each project there are specific knowledge requirements linked to each project.\n\nIt is recommended that the student has read a project course, for example one of the courses there212 Object -oriented programming projects, DRA543 Software Engineering Project or DR) computer technology project, before starting the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT561.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit993 mathematical modeling and problem solving, 7.5 higher education credits", "content": "Mathematical Modeling and Problems Solving, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is compulsory in the Bachelor's Program Data Science Program (N1COS).It is also given as a standalone course at the University of Gothenburg.\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "In order to be authorized, completed courses of 45 credits including:\n\n- Approved course in imperative or object -oriented programming (DR012, DRA953 or similar)\n- Approved course in linear algebra (MMGD20 or equivalent)\n- Approved course in mathematical analysis (MMGD30 or equivalent)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Describe different types of model types and their properties, as well as the modeling and problem-solving processes.Describe main aspects of mathematical thinking.\n- Explain the role of mathematics in different areas of application.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Mathematical modeling: Examine real problems, appropriately translating into a mathematical model, and drawing conclusions using the model.The modeling includes specifying, simplifying, making appropriate assumptions and choosing how the problem can be described e.g.with equations or in other mathematical ways.\n- Mathematical problem solving: Solve complex and unknown problems with an investigative and structured way of working, among other things by analyzing and understanding, working in smaller steps and trying out.\n- Communicate about and with the help of mathematics.\n- Using different mathematical calculation tools as a natural part of working mathematically.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Show ability to balance your own thinking and known knowledge.\n- Show a reflective approach to the course content and your own thinking.\n- Show accuracy and quality in all work.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course is primarily intended as an introduction to mathematical modeling and problem solving for students with limited experience of how mathematics is used in different areas of application, but which may work in different areas where mathematics is useful.\n\nIts main purpose is to give the student the ability to apply the theoretical mathematics to solve problems in science and technology.By giving the student experience in different areas of application, and developing the skills required, primarily mathematical modeling and techniques for problem solving, the course thus fills the door between the theoretical mathematics courses and relevant applications.The course also contains a broader summary of mathematical thinking.\n\nThe core of the course is a number of realistic and application -oriented exercise problems, which are used as a starting point for their own learning.The problems are carefully selected and formulated to develop the student's ability to model and solve problems with an investigative way of working.The problems highlight many different application areas and are grouped by main model types.\n\nIn the list below you can find examples of concrete content:\n\n- Functions and equations, such as how different mathematical claims can be justified and how to create functions based on experimental data\n- Optimization models, such as mathematical programming in finance and decision support.\n- Dynamic models, such as simulation in biology, physics and technology.\n- Probabilist models, such as stochastic simulation, Markov models for texts, Bayesian inference.\n- Discreet models, such as graphs and networks for modeling various activities, modeling with discrete standard problems and batch logic, planning.\n- One or two modules with substances that can vary from course to course.\n\nOwn learning is supported by a supervision style that develops the student's independent ability.During lectures, we also discuss different problem -solving strategies, reflect on solutions and compare different ways to solve the same problems.\n\nThe course also orients about the role of mathematics in different applications and emphasizes the importance of mathematical computer models.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "Rating scale: very well approved (5), well approved (4), approved (3) and\n\n1. Subscription tasks (assignments), 7.5 credits failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "The course is mainly organized in weekly modules by model type.For each weekly module, an introductory lecture is given, assignments to solve during the week, and a follow -up mandatory lecture that provides feedback on the solved tasks.\n\nThe course learning is supported by an interactive teaching style with a lot of contact between students and teachers.This is done during supervision hours where students solve the tasks and regularly discuss with the teachers.The students then receive individual feedback and guidance in their own problem solving, and develop their independent ability.\n\nAs a follow -up to each module, students are allowed to reflect on their own and alternative solutions, and on their own problem solving.\n\nLanguage Language: English\n\nThe main teaching language is English, but supervision and support can also be given in Swedish.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through written assignments and a final essay, where students are encouraged to summarize and reflect on the course in a personal way.In addition, the course contains compulsory forwarding lectures for each module, as well as a compulsory final meeting where the essay is discussed.Both the assignments and the thesis are normally carried out in groups of two people.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nIn order to obtain the grade approved (3), approved submission information and approved essay, as well as attendance on the compulsory elements are required.\n\nTo get the grade 4 or 5, a 4 or 5 is required on both the assignments and the essay.In order to be approved for the assignments, the student must show that the argument is correct and maintains fundamental quality measures.\n\nFor the grade 4, the student must show deeper understanding in the subject and maintain good quality of written explanation.For the grade 5, the student must show that solutions are very good with clarity and depth in explanations and creativity and originality.For the grade approved on the final thesis, the student must show the fundamental understanding of the course content, that the presentation and content of the report are correct and understandable.For the grade 4, the student must show deeper understanding in the subject and maintain good quality of written explanation.\n\nFor the grade 5, the student must show very good understanding of the course content with clarity and depth in explanations and creativity and originality.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "Since the exercise problems are the most important thing in the course, there is no course literature in the traditional sense.For distributed material and next to reading, see the course's website.\n\nThe course is collected with Chalmers.\n\nThe course replaces the course there992, 7.5 credits.This course cannot be included in a degree containing there 1992.Nor can it be part of a degree based on another degree that includes 1992.\n\nKnowledge of probability theory/statistics is recommended but is not necessary to follow the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT993.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "The IT Faculty", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit214, Computer Engineering Project, 7.5 higher education credits", "content": "Computer Science and Engineering Project, 7.5 Higher Education Credits\n\nBasic level/First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "1. Fastställande", "content": "Kursplanen är fastställd av Institutionen för data- och informationsteknik 2014-03-06 att gälla från och med 2014-09-01.\n\nUtbildningsområde:\n\nNaturvetenskapligt 100 %\n\nAnsvarig institution: Data- och informationsteknik", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "2. Placement", "content": "The course is included in the Bachelor's program Computer Science Program at the University of Gothenburg.\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "3. Prerequisites", "content": "For access to the course, at least the grade is required on the courses Basic Computer Technology (DR791 or equivalent) as well as programming of embedded systems (DR152 or equivalent)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "4. Content", "content": "The construction and verification of a micro -system system, including microprocessor and peripheral units, which is developed for a certain functionality and some performance.Methodology for project work, including planning, operation and follow -up.Written presentation in the form of documentation, protocols and final reports.\n\nThe course will provide the student with basic and general skills in running and participating in technical development projects, which means working coordinated in a project group for planning, implementation and follow -up, with great importance placed on written communication.The course will also provide the student with technical skills in constructing, integrating and verifying hardware for processor-based systems.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "5. Goals", "content": "After completing the course, the student is expected to be able to: Knowledge and understanding\n\n- Construct and verify a micro -system system, which consists of a microprocessor and suitable peripheral units, certain electronics for interfaces and a graphic interface (GUI), to fulfill specified functionality and performance.\n- With the support of a version management system, organizing ongoing documentation, reports and program code.\n- Show basic skills in running, following up a technological development project that is run in a group on a handful of developers.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Färdighet och förmåga", "content": "- skriva en grundläggande projektplan inför ett tekniskt utvecklingsprojekt.\n- skriva en projektrapport som avslutning på ett tekniskt utvecklingsprojekt samt kritiskt granska ytterligare ett projekt.\n- skriva ett C-program för en mikroprocessor med fokus på hantering av periferienheter.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- reason about positions and conclusions, their background and their consequences, in their own project and for another project.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "6. Literature", "content": "See separate literature list", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "7. Forms for assessment", "content": "The course is run in project form in groups of 6-7 students.\n\nThe course is examined through a written project plan, a written final report, and through accounting/demonstration of final product.The student will also critically review another group's report draft and in connection with this submit an opposition report for assessment.A continuous assessment is made on project meeting management and version management.\n\nIf a student who has been rejected twice at the same graduated element wishes to change the examiner for the next examination opportunity, such request must be submitted in writing to the institution and approved if there are no special reasons, however.\n\nIn the event that a course has ceased or undergone major changes, the student must be guaranteed at least three sample cases (including ordinary test cases) for a period of at least one year based on the course's previous syllabus.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "8. Rating", "content": "The rating scale includes the grade degrees failed (U), approved (G), well approved (VG).The grade is based on various collaborative parameters, namely quality in project operations (planning, construction work), technical quality (fulfillment of plan, quality of final product) and quality in written\n\nCommunication (disciplinary language, information structure, rhetoric, public -adapted argument).\n\nThe grade approved means that the student shows basic skills and knowledge in all three parameters, i.e.Project operation, technical quality and written communication.For the grade well approved, the student must show good skills and deeper knowledge of the three mentioned parameters.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "9. Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "10. Other", "content": "Language Language: Swedish.\n\nThe course is collected with the corresponding course at Chalmers.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT214.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit257 Agil Project Management, 7.5 higher education credits", "content": "Agile Software Project Management, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2019-11-18 and most recently revised 2022-11-23.The revised syllabus is valid from 202308-28, autumn term 2023.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is included in the following programs: 1) Computer Science, Master's Program and 2) Computer Science Program\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS) and 3) Applied Data Science Master Program (N2ADS)\n\nMain area\n\nRecess\n\nComputer science\n\nG2F, basic level, has at least 60 credits course/ER on basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "In order to be eligible for the course, the student must have completed courses in programming for at least 15 credits, for example two of Dit440, DR there012 or Dit953.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:\n\nKnowledge and understanding\n\n- Describe software development as a technical discipline using relevant terminology\n- describe the relationship between stakeholder, product and process", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Skills and ability", "content": "- specify, implement and evaluate a system based on what different stakeholders consider valuable\n- In collaboration with other team members learn tools and APIs that are relevant to the project\n- As a member of a team, apply a structured software development process", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Valuation and attitude", "content": "- reflect on how the software development process was implemented in a project\n- reflect on their own and group learning strategies", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "The course provides a practical introduction to software development.The students work with an open problem that is defined by stakeholders outside the students' team.This means that the students do not define the focus of the project themselves.By iteratively planning and evaluating their work, they organize themselves to achieve a common goal with limited resources.To do this, they apply an agile software development process to structure their work.They specify and evaluate the requirements and cooperation with stakeholders to ensure that what is delivered is perceived as valuable.Students reflect on their own work and learning every week to enable a continuous improvement of their way of working.At the same time, they gain skills and knowledge of new technology, tools and appropriate ways to use them, to give value to a stakeholder based on the student's own learning strategies.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Sub -courses", "content": "1. Project (Project), 7.5 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "The course is organized as a project where the students work in teams of usually six students, to solve a realistic software development task.The team has tutorial meetings every week.As supplement to the project, lectures are given that provide in -depth insight into the task the students work with, as well as software development in general.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "The course is assessed continuously through a weekly report.The report contains both a common team part and an individual part for each team member where the project's progress is documented.The final grade is based on the last version of the report according to the grading criteria below.Thus, the student adds iteratively and gradually their reflections throughout the project.The content and structure of the report are in line with the intended learning objectives.The teachers provide detailed questions and subjects to reflect on for each course body.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades approved (G) and failed (U).\n\nThe rating scale includes: Approved (G) and Fail (U).\n\nIn order to be approved on the course, both the individual and the team's submission must be approved.\n\nThe team part consists of a final report that summarizes and synthesizes the weekly reflections.The reflections should clearly specify the team's own experiences, the proposed changes to improve the subject/situation, how the changes were evaluated (CPIs, acceptance testing, etc.) and subsequent experiences and changes.In addition, the team must submit the source code, tests, an account of the members' contributions, the technical documentation, instructions on how the product is installed and used, an executable file where applicable (eg an APK or JAR file) and the weekly sector.\n\nThe individual part consists of weekly reflections, contributions to the source code and collegial assessment.There should be a complete individual reflection for each week that must be submitted.The student must reflect on their own learning and how they have in a meaningful way contributed to the process and to the team.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course is evaluated through meetings, both during and after the course, between teachers and\n\nStudent representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit543 Software Engineering Project, 7.5 credits. This course cannot be included in a degree containing there543.Nor can it be part of a degree based on another degree where there543 included", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT257.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit234 digital construction, project course, 7.5 higher education credits", "content": "Digital Project Laboratory, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2020-11-11 to apply from 2021-08-30, autumn term 2021.\n\nTraining area: Scientific 2 %, Design 8 % and Technology 90 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is included in several programs and is given as an independent course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS) and 2) Computer Science, Master's Program (N2COS)\n\nMain area\n\nRecess\n\nComputer Science-Networks and Distributed Systems\n\nG2F, basic level, has at least 60 credits course/ER on basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "For access to the course required:\n\nOne year's studies in the subject of computer science or equivalent and the course there791 digital and computer technology (or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Describe the principles for a structured and hierarchical description of less digital systems [P, R].\n- Describe the function of programmable logic circles and how they are best utilized [L, R, P].", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Manage computer tools for electronics construction (EDA) to develop and verify constructions with programmable logic circles [l, R, P].\n- Implementing a prototype system taking into account aspects such as clocking, synchronization and control (permit machine) [R, P].", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Search for information in documentation / data sheets of commercial electronic components [r, b, v]\n- Determine the requirements for power supply of digital circuits in environments with several voltages [r, p].\n- Develop a digital prototype system, from specification, via implementation and verification, to testing and evaluation [V, R, P].", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "Construction work in connection with the construction of a digital system in which a microprocessor can be included.\n\nThe following knowledge acquires the students:\n\n- construction - with limited resources\n- troubleshooting with logic analytor\n- Timing\n- Using fpga circuits\n- read technical documentation\n- Report writing focusing on technical documentation", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Project (Project), 7.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "The course starts with a short lecture series and some laboratory work that makes the students familiarize themselves with the CAD/EDA tools.The students then carry out their construction work under the supervision of the supervisor.The project work is carried out in groups.Each group chooses a task according to their own proposal or from a project catalog.Components, instruments and other equipment are kept available in accessible premises for course for a period of six weeks.The construction work is presented in a written report.The students have a meeting a week with supervisor or examiner who is mandatory.The course ends with a seminar with a compulsory attendance, where the projects are reported.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The examination takes place continuously during the course with laboratory work [l], weekly meetings [v], review of logbooks [O], assessment of final product [p] and report [r] and the oral presentation [m].The grade is set based on which project the group has chosen which gives a base rating, this is adjusted according to how well the project has been implemented.The individual grade is set based on the student's performance in the group, the oral presentation, posts in logbook and individual contribution report.All parts above must be approved for the final grade on the course.Detailed ground can be found in course PM.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such request must be submitted in writing to the institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, a student must be guaranteed at least three examinations (including regular examinations) for a period of at least one year, however, as long as two years after the course has ceased/changed.As regards internship and VFU, the same applies, but with limitation to only an additional examination.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit796, 7.5 credits.This course cannot be included in a degree containing there 796.Nor can it be part of a degree based on another degree where 796 is included.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT234.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit213 Object -oriented programming projects, 7.5 higher education credits", "content": "Object-Oriented Programming Project, 7.5 Credits\n\nBasic level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is given as an independent course at the University of Gothenburg\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG1F, basic level, has less than 60 credits course (s) at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "For access to the course, two approved programming courses corresponding to DR) Object -oriented software development and Dit950 Programming, Advanced Course or equivalent are required.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After completing the course, the student is expected to be able to:\n\nKnowledge and understanding\n\n- -Swear a smaller object -oriented software project in group according to the established development process and schedule", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Skill and ability", "content": "- Document the work in such a project in the form of eg, a basic requirement specification and a simpler design document\n- Using modern tool development eg.Test framework and version management system", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Valuation and attitude", "content": "- be able to evaluate different aspects of design;testability, dependencies, partitioning, modularity, layering etc.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "The course intends to provide knowledge and practice in professional development of software.The course presents a simple, test -driven, object -oriented software development process.Concepts such as iterative development, object-oriented analysis and design, domain and design model, \"Domain Driven Design\" are introduced.Different aspects of design are reviewed: testability, dependencies, partitioning, layering and others.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Sub -courses", "content": "Rating scale: very well approved (5), well approved (4), approved (3) and\n\n1. Project (Project), 7.5 credits failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "A smaller number of lectures, a compulsory seminar and some \"workshops\".In parallel with this, the students, in groups of normally four, carry out a complete development project in the form of a smaller software project.The project includes compulsory weekly wrist meetings and an oral final presentation.\n\nLanguage Language: Swedish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "The course is examined through an oral demonstration, submitting programming projects (in the form of program code) and a final report describing the project's specification and design.The group will also conduct a collegial review of another group's project, which is included in the final report.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such request must be submitted in writing to the institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, a student must be guaranteed at least three examinations (including regular examinations) for a period of at least one year, however, as long as two years after the course has ceased/changed.As regards internship and VFU, the same applies, but with limitation to only an additional examination.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nThe group work is rated based on the three parts (presentation, report, and code) and is then adjusted for each individual group member based on the individual effort.\n\nThe grading criteria on different aspects (size, quality, functionality, design, testing and documentation) and how they are weighed together in the grade can be found in course PM.\n\nTo be approved on the course is required:\n\n- Approved individual contribution to the project\n- participation in weekly wrist meetings\n- Participation in the course's closing presentation day\n\nIn order to obtain grade 3 on the course, approved for the project is required, on the individual contribution to the project and on the oral presentation of the project.For a higher grade (4 or 5) the same as grade 3 is required but with higher demands on the different aspects.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course evaluation follows the program's standard procedure with meetings between student representatives and teachers as well as a closing evaluation meeting in which some representative for the program also participates.An anonymous survey is used as a basis for the meeting and any measures.Protocols from the meeting are presented and made available to new students at the next course opportunity", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.Literature in English may occur.\n\nThe course replaces the course Dit212, 7.5 credits.This course cannot be included in a degree containing there212.Nor can it be part of a degree based on another degree which includes 212.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT213.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit513 Project course in computer science, 7.5 higher education credits", "content": "Project Course in Computer Science, 7.5 Credits Basic Level / First Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is given within the computer science bachelor's program.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS)\n\nMain area\n\nRecess\n\nComputer science\n\nG2F, basic level, has at least 60 credits course/ER on basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "The student must have completed courses of at least 90 credits of a bachelor's program in computer science or equivalent.\n\nIn addition, the examiner is required to approve the student's proposal for projects and supervisors.\n\nIn addition, the examiner must approve that students have the knowledge required in the subject area for the specific project.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Explain terminology, concept and theory linked to the chosen subject area;\n- account for current methods and technologies in the chosen subject area;\n- Analyze and carry out a development project that has a clear goal and a predefined result;", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Plan work, set interim goals, keep the project going, make realistic assessments of resource requirements and possible results;\n- seek relevant literature and related results;\n- present results clearly in oral and written form;\n- Document the project so that others can build on it;\n\nValuation and attitude\n\n- Evaluate and compare different solutions to the current problem;\n- Draw conclusions from the results of the work.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Content", "content": "The course intends to provide knowledge and practice in professional development of projects, which means working coordinated in a project for planning, implementation and follow -up, with great importance placed on written communication.During the course, the student will carry out an academically interesting development project of a system in hard and software.The student will carry out the project individually or in groups.\n\nThe project can be carried out at the Department of Data and Information Technology or in a company.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Sub -courses", "content": "1. Project (Project), 7.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Forms of teaching", "content": "The student must individually or in a group of a maximum of 4 students carry out a development project.The student is responsible for contacting an academic supervisor who can continuously follow the student's work during the course.\n\nTutoring in English may occur.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of assessment", "content": "Submission of a development project (in the form of, among other things, program code and documentation), an oral presentation and a written report.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nIn order to obtain grade 3 on the course, the development project is required (including design, quality and functionality), on the oral presentation and the written report.For the higher grade (4 or 5), as a grade is required, but with higher requirements both on the project, presentation and the report.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Course evaluation", "content": "The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Other", "content": "The choice of course material depends on the project it is about and is jointly determined by the students and their supervisors at the beginning of the work.\n\nThe course replaces the course there512, 7.5 credits.This course cannot be included in a degree containing there512.Nor can it be part of a degree based on another degree that includes 512.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT513.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit093 algorithms, 7.5 higher education credits", "content": "Algorithms, 7.5 Credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2020-12-18 and most recently revised 2022-11-15.The revised syllabus is valid from 202308-28, autumn term 2023.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is given within a number of programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course can be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Mathematical sciences, Master Program (N2MAT), 4) The Mathematics Program (N1MAT) and 5) Applied Data Science Master Programs\n\nMain area\n\nRecess\n\nComputer science\n\nAXX, Advanced Level, In -depth course of the course cannot be classified", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "The prerequisite requirement is completed courses of 120 credits in the subject of computer science or mathematics, including;\n\n- 7.5 credits Discrete mathematics (dit984 Discreet mathematics for computer scientists, or the sub -course initial algebra in mmg200 mathematics in or mash),\n- additional 10 credits mathematics,\n- 7.5 credits imperative or object -oriented programming (DRA013 imperative programming with basic object orientation, or equivalent),\n\n- additional 7.5 credits programming,\n- 7.5 credits data structures (DR) data structures, DR) 375 Python for Data Scientists or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Describe algorithms and their characteristics: explain algorithms in writing, so that others can understand how they work, why they are correct and fast, and where they are useful;\n- Realize that non-trivial calculation problems, which must be solved with the help of algorithms, appear in various real computer applications and formalize them;\n- Intractability: recognize \"intractable problems\" and other classes of problems such as P, NP, NPC;\n- Prove the correctness of algorithms.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "-Design: Apply the most important design techniques for effective algorithms (eg greedy, dynamic programming, Divide-and-Conquer) to problems similar to the textbook examples but are new;\n- Performing the entire development cycle of algorithms: problem analysis, choosing, modifying and combining appropriate techniques and data structures, analysis of correctness and complexity, finding possible improvements, etc.;\n- Perform simple reductions between problems, explain NP completeness and recognize different calculation difficult problems that tend to emerge over and over in different applications.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- critically assessing algorithmic aspects and showing the ability to look through obvious and apparently reasonable algorithms that often turn out to be incorrect,\n- Analyze: Explain why time efficiency in algorithms is crucial, express\n\nTime complexity in a rigorous and scientifically correct manner, analyzing the complexity of algorithms (summarize surgery in nestled loops, solving ordinary recursion equations, etc.) that is, make an objective assessment of performance to be able to compare with other algorithms.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course provides knowledge about:\n\n- What are criteria for an effective algorithm?\n- Tools for analysis of algorithms.O-notation.Analyze loops and recursive calls.Solve recurrence relationships.\n- Data structures and algorithms.Review of basic data structures.\n- Grafalgorithms.\n- greedy algorithms.\n-Divide-and-Conquer.\n- Dynamic programming.\n- Exhaustive search.\n- Basic complexity theory.The complexity classes P, NP and NPC, reductions.Examples of NP-complicated problems.To deal with difficult problems.\n- Combine different design techniques and data structures.\n- Short orientation on other design techniques: for example, randomized algorithms, pre -treatment, etc.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Exam (exam), 7.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and\n\nFailed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "The course is given in the form of lectures, combined with exercise hours for problem solving and a number of assignments aimed at developing the ability to analyze and design algorithms.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through individual written examination.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nOn the course, one of the grades failed (U), 3, 4 or 5, is given according to the results of the exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course replaces its 602 Algorithms, 7.5 credits.This course cannot be included in a degree containing there 602.Nor can it be part of a degree based on another degree that includes 602.\n\nThe course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT093.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit203 mathematical logic for computer science, 7.5 higher education credits", "content": "Logic in Computer Science, 7.5 Credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2022-11-17 to apply from 2023-08-28, autumn term 2023.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution:\n\nDepartment of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is given within a number of programs.It is also given as a standalone course at Gothenburg University.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Mathematical sciences, master's program (N2MAT) and 4) The mathematics program (N1MAT)\n\nMain area\n\nRecess\n\nMathematics\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites\n\nComputer science\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "In order to be eligible for the course, the student must have completed courses for 105 credits in computer science or mathematics, including 7.5 credits in discreet mathematics (for example, dut980 Discreet mathematics for computer vesters, initial algae part of MMG200 Mathematics 1, or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Explain when a given formula is a tautology\n- Explain the concept of model of the language of a first order and of temporal logic\n- Explain when a first order and a temporal logic's formula is semantically valid\n- Explain how to check if a Branching-Time temporallogic formula is valid in a given model\n- Explain the importance of health and completeness the theorem for batch and predicate calculation", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Write and check derivations in natural deduction for batch and predicate calculation\n- Specify the properties of a reactive system using linear temporal logic and Branching-Time temporal logic", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Assess the relevance of logical reasoning in computer science regarding modeling of computer systems\n- Analyze the usefulness of logical tools for solving problems in computer science, e.g.Find bugs using model control (Model Checking)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "Powerful tools for verification of software and hardware systems have been developed.These tools relying decisively in logical techniques.The course provides a healthy foundation in logic and a brief introduction to some logical frameworks used to model, specify and verify computer systems.Basic knowledge of logic is a good basis for courses in program verification, formal methods and artificial intelligence.\n\nThe course covers the batch and predicate calculation and model control (Model Checking).More specifically, the course gives a thorough introduction to basic concepts in logic such as natural deduction, semantics for both batch and predicate calculation, health and completeness, conjunctiva normal forms, horn clauses, inexplicable and expressiveness of predicate logic, plus an introduction to model control (model checking): Line Temporals Temporals Tempoch(Ctl).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "Rating scale: very well approved (5), well approved (4), approved (3) and\n\n1. Written Hall (Written Hall Examination), 7.5 credits failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Teaching is given in the form of lectures, exercises and voluntary assignments that give bonus points on the exam.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through an individual written exam that takes place in an exam hall at the end of the course.\n\nDuring the course, non-compulsory individual submissions are offered that provide bonus points for the written exam.These bonus points apply throughout the academic year.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF 6 Chapter 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous organization.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nThe final grade in the course is based on the grade on the written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course dit202 mathematical logic for computer science, 7.5 credits.This course cannot be included in a degree that contains there 2012.Nor can it be part of a degree based on another degree that includes 2012.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT203.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit176 prototyping for interaction design, 7.5 higher education credits", "content": "Prototyping in Interaction Design, 7.5 Credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2023-11-23 to apply from 2024-09-02, autumn term 2024.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is given as a standalone course.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS) and 3) Game Design & amp;Technology Master Program (N2GDT)\n\nMain area\n\nRecess\n\nInteraction design\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "To be eligible for the course, the student must have a bachelor's degree of 180 higher education credits.In addition, a course in human-computer interaction is required, 7.5 higher education credits.\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After completing the course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Describe how prototypes are used in interaction design.\n- Describe the pros and cons of different types of prototypes.\n- Reign for what can be examined with a certain prototype, and why.\n- Describe what cannot be examined with a certain prototype, and why.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- Create physical prototypes of different kinds of materials, with different techniques\n- Create video prototypes that illustrate a concept or suggestion\n- Create prototypes with simpler sketches\n- Create digital/physical prototypes\n- perform basic programming of microcontrols connected to different forms of components\n- program simple interactive prototypes", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Choosing the form of prototype to be used to investigate what one wishes to know, taking into account any restrictions such as time or money\n- perform early evaluations of prototypes\n- Plan appropriate prototypes in the correct places in a design process", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course gives an introduction to, and practice in creating different types of prototypes in interaction design.The content covers both physical prototypes (paper prototypes, prototypes with microcontrols and electronic materials, physical modeling) and digital screen -based prototypes (using sketch methods and video details).\n\nThe course also provides an understanding of what you can test with different prototypes, and when.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Participation in workshops and through oral and written presentations\n\n(Participation in workshops and oral and writen presentation of these), 4 credits rating scale: approved (g) and failed (u)\n\n2. Group project with Report (Group Project Report), 3.5 credits rating scale: very well approved (5), well approved (4), approved (3) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "The teaching consists of lectures, workshops and practical laboratory work.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course examination takes place in two modules:\n\n1. Participation in workshops and through oral and written presentations (4 points)\n2. Group project with report (3.5 points)\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination opportunity, such request must be submitted in writing to the institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, a student must be guaranteed at least three examinations (including regular examinations) for a period of at least one year, however, as long as two years after the course has ceased/changed.As regards internship and VFU, the same applies, but with limitation to only an additional examination.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nFor approved, approved on the course's both modules are required.Grade 3 means that the student exhibits basic skills and understanding of both physical and screen -based prototypes.In addition to in -depth knowledge and technical skills, grade 5 also requires that the student exhibits critical and reflective abilities.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings, both during and after the course, between teachers and student representatives.An anonymous written questionnaire is also sent to the students after the end of the course.The results of the evaluations are used to improve the course content and as an indication to which parts could be added, removed, improved or changed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course TIA108, 7.5 credits.This course cannot be included in a degree containing TIA108.Nor can it be part of a degree based on another degree where TIA108 is included.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT176.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit272 Formal methods in software development, 7.5 higher education credits", "content": "Formal Methods in Software Development, 7.5 Credits Advanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2020-12-18 and most recently revised 2023-11-13.The revised syllabus is valid from 202409-02, autumn term 2024.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is part of Computer Science Master's program and is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS) and 2) Computer Science, Master's Program (N2COS)\n\nMain area\n\nRecess\n\nComputer science\n\nA1f, advanced level, has course/s at advanced level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "The prerequisite is completed by 120 credits in the subject of computer science, or the equivalent, especially there203 Logic in Computer Science, 7.5 credits, and a 7.5 credits in object -oriented programming (or equivalent) is a requirement.\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Describe the possibilities and limitations of logic -based verification techniques to assess and improve software quality,\n- decide what can and cannot be expressed in a given formalism for specification or modeling,\n- decide what can and cannot be analyzed with a given logic and method of evidence,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- formally express security characteristics and liveness in (parallel) programs,\n- Describe the basics in verification of security properties and lifetime using model control (Model Checking),\n- Using tools that automate model control of security properties,\n- Write formal specifications for classes in object-oriented programs using contracts and class interventions,\n- describe how the relationship between programs and formal specification can be represented in a program logic,\n- Verify functional properties of simple programs in a verification tool", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- assess and communicate the meaning and importance of correctness in software development,\n- Solve problems related to the development of well -functioning software through abstraction, modeling and rigorous reasoning.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The purpose of the course is to teach knowledge, technology and judgment regarding important techniques in formal methods: model control (Model checking) and deductive verification.Both styles are introduced in three ways: conceptually, theoretical and practical, by using a specific tool.The course is based on knowledge of the first order logic and temporal logic, and shows how these formalisms can be applied, and extended for software verification.\n\nFor model control, the course covers the following topics:\n\n- a specification language for parallel processes,\n- verification of claims,\n- synchronization,\n- Verification of security and living properties written in temporal logic for deductive verification covers the course the following topics:\n- Program logic, including Hoare logic and separation logic,\n- reasoning about loops with invariants,\n\n- Verification of small programs with program verification tools,\n- Techniques used in verification of larger or complex programs", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Written Hall (Written Hall Exam), 5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and failed (U)\n\n2. Laboratory (Laboratory), 2.5 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "There are about two lectures per week and there is one exercise per week.Students perform practical example exercises using the tools in laboratory work.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through a written examination at the end of the course and compulsory assignments submitted during the course.The assignments are usually made in pairs.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nIn order to get approved on the entire course, approved for both the assignments and the written examination.Grades for approved students are determined by the exam result.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and\n\nStudent representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is a collective course with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces DRA271 Software Engineering using formal methods.This course cannot be included in a degree that contains its 271.Nor can it be part of a master's degree based on another Bachelor's degree which includes 271.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT272.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit235 types for programs and evidence, 7.5 higher education credits", "content": "Types for Programs and Proofs, 7.5 Credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is offered within several educational programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS) and 2) Computer Science, Master's Program (N2COS)\n\nMain area\n\nRecess\n\nComputer science\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "For access to the course, the student must have at least 120 credits in computer science or mathematics, or the equivalent.Specifically, a 7.5 credits course in discreet mathematics (eg, 980 Discreet mathematics for computer scientists, or the equivalent) and a 7.5 credits in functional programming (eg, 143 functional programming, or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toefl, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- describe different kinds of type system, their underlying design principles, and their semantic foundations\n- read and present a research subject in the field", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- program in a functional programming language with dependent types\n-Prove theorem in a functional programming language with dependent types, using the principle \"propositions-as-claim\"\n- Using deduction systems to present type system and calculation rules for programming language", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- critically analyze type system and prove the properties of them", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "Powerful and flexible type system is an important aspect for modern programming languages.This course provides an introduction to this area.Among other things, we introduce the term \"dependent type\", ie.A type that may be due to the values of another type.Depending types have many uses.By identifying claims and types (curry-howard identification), one can express virtually any property of a program.In the course, the student learns to use an interactive programming system for dependent types.\n\nThe course will provide broad and solid knowledge of how type -language type system is structured, and also provide examples of type -based techniques in computer science.\n\n- Introduction to Lambdak Calculation and Easy Type theory\n- Introduction to operational semantics and type system\n- Dependent types\n-the curry-howard identification of claims and types\n- Programming in Agda, a proof assistant\n- Presentation of advanced topics within the type system area", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Home exam (Take Home Examination), 7.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Teaching is given in the form of lectures, exercises and supervision.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through an oral presentation that is normally carried out in pairs, and an individual home exam.In addition, for a higher grade than G, the student must be approved on an oral individual exam.\n\nThe home exam includes both theoretical problems and programming tasks.For the oral presentation, the student can either choose a research article or a chapter in the course book that contains applications of type systems that have not been covered in the lectures.\n\nIf the home exam is submitted late, it is rejected.Examination of the home exam is done through an individual oral exam.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nThe grade on the course is the same as the grade on the \"Home Tenter\" sub -course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "Knowledge of functional programming is recommended, for example, from the course DRA143 Functional programming, or equivalent.\n\nThe course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit233, 7.5 credits.This course cannot be included in a degree containing there233.Nor can it be part of a degree based on another degree that includes 233.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT235.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "DIT401 Operating Systems, 7.5 higher education credits", "content": "Operating systems, 7.5 credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2017-02-10 and most recently revised 2018-02-09.The revised syllabus is valid from 201808-19, autumn term 2018.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is given within a number of programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS) and 3) Applied Data Science Master Program (N2ADS)\n\nMain area\n\nRecess\n\nComputer science\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "In order to be eligible for the course, the student must have approved courses corresponding to 60 credits in the subject of computer science, or equivalent, including the following:\n\n- a 7.5 credits course in machine -oriented programming (DRA151 or equivalent),\n- a 7.5 credits course in data structures (DR there960 or equivalent),\n- A 7.5 credits course in programming (DR440, DRT012 or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Explain how internal components in a modern operating system work,\n- Explain basic concepts and algorithms in implemented operating systems,\n- Enter how research areas (ranging from parallelism to safety) are integrated into modern operating systems,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- account for the main functionality of modern operating systems,\n- Write programs that interact with the operating system at the system call level,\n- implement A part of a code snippet at system level,\n- Demonstrate programming using multi -counsel synchronization structures in program languages such as C, C ++ and Java,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Analyze and, based on a critical approach, make balances in the design and implementation of the internal components of an operational system.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course focuses on the design and implementation of operating systems.Substances that are dealt with are the following: parallel processes, resource management, locking situations, handling of memory techniques, virtual memory, processor scheduling, disk scheduling, file systems, distributed file systems, micro -cores, operating system problems that occur when using multi -processors and virtual machines.Examples or case studies are developed for all areas that are dealt with during the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. The exam (Written Exam), 6 credits rating scale: well approved (VG), approved (g) and failed (U)\n\n2. Laboratory (Laboratory Work), 1.5 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Lectures, exercises and laboratory work.The laboratory intends to provide practical experience in designing operating systems.The student is practicing by using and\n\nConstruct modules in operational systems such as multip programming, memory management, implementation of mix-like shell functionality.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through laboratory work and a hall exam at the end of the course.The laboratory is normally carried out in pairs.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades well approved (VG), approved (G) and failed (U).In order to be approved for the course, the grade is required for both parts.In order to obtain the grade well approved, students must have received the grade well approved for the sub -course exam and the grade approved on the sub -course laboratory work.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nThe course replaces DRA 400 Operating Systems, 7.5 credits.This course cannot be included in a degree containing there400.Nor can it be part of a degree based on another degree that includes 400.\n\nCourse literature will be published no later than 8 weeks before the course starts.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT401.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit056 Sustainable Data Processing, 7.5 Higher Education", "content": "Sustainable Computing, 7.5 Credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is offered within several educational programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS) and 2) Computer Science, Master's Program (N2COS)\n\nMain area\n\nRecess\n\nComputer science\n\nA1f, advanced level, has course/s at advanced level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "A completed 7.5 credits course in computer architecture (eg, 1051 computer architecture, or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toefl, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- Describe why sustainable data processing is an important topical topic\n- describe the electrical mechanisms that cause power outages\n- describe circuit techniques to reduce power loss and impact on performance\n- Describe computer architecture, memory and secondary storage techniques to reduce energy consumption\n- Describe operating systems, Runtime systems and applications to reduce energy consumption\n- account for what affects energy consumption in computer systems in terms of computer architecture", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- use specific devices to directly measure energy consumption throughout the system\n- Use built -in support for monitoring performance to measure energy consumption for certain components of the system\n- Using simulation tools to estimate energy consumption for different system configurations", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Identify strengths and weaknesses in different classes of computer system components (eg processor, memory) with respect to energy efficiency\n- Evaluate and compare different architecture and system techniques with respect to energy efficiency\n- account for methods for evaluation and reporting energy consumption in computer systems and how these can be used to find optimizations\n- Evaluate energy consumption based on social and ethical aspects\n- Interpret the demand for computer architectures' design, in order to meet social needs for sustainability\n\nThe course is sustainability -focused, which means that at least one of the course's learning objectives clearly shows that the course's content meets at least one of Gothenburg University's criteria for sustainability labeling.This content also constitutes the main focus of the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The purpose of the course is to make students aware of the importance of sustainability in data processing and to show techniques to achieve it at the different levels of a computer system.\n\nThe course aims to give an overview of the energy efficiency aspects of computer systems and data processing, ranging from electronic circuits to applications for systems that extend\n\nSubstanding from small IoT devices to large data centers.For example, students will learn methods for measuring and estimating energy consumption for various architectural components, as well as architecture and software techniques to save energy in the system.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Written Hall (Written Hall Examination), 6 credits rating scale: very well approved (5), well approved (4), approved (3) and failed (U)\n2. Laboratory (Laboratory), 1.5 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "The teaching is conducted through lectures, exercises and laboratory work.The course consists of a lecture series, home tasks, oral and laboratory work including a project carried out in groups.\n\nThe students will present the results of their home tasks through short oral presentations to demonstrate their understanding and facilitate the discussion.Discussions will not only focus on technology, but also on how technology is partly affecting the world's carbon dioxide emissions right now and partly on how it is likely to affect society in future generations.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through an individual written examination and approved laboratory work.The laboratory is performed in groups of normally 2-3 students.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo get one of the grades 5, 4 or 3, you must receive the grade G on the sub -course assignments, and partly that you get approved results (5, 4 or 3) on the sub -course written hall.In that case, the grade on the entire course is the grade on the sub -course written hall exam.Otherwise, the grade on the entire course is U (failed).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit055, 7.5 credits.This course cannot be included in a degree containing there055.Nor can it be part of a degree based on another degree that includes it055.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT056.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit224 computer graphics, 7.5 higher education credits", "content": "Computer Graphics, 7.5 Credits Advanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2019-02-08 to apply from 2019-09-02, autumn term 2019.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is compulsory in the Master's program N2GDT Game Design and Technology.It is also offered in other programs.The course is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Applied Data Science Master Program (N2ADS) and 4) Game Design & AMP;Technology Master Program (N2GDT)\n\nMain area\n\nRecess\n\nComputer science\n\nA1f, advanced level, has course/s at advanced level as prerequisites\n\nInteraction design\n\nA1f, advanced level, has course/s at advanced level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "The student must have 90 credits in completed courses in the subject area of computer science, which should also include the following courses:\n\n- 7.5 credits in data structures (dit961 or equivalent), and\n- 15 credits within imperative or object -oriented programming (DR012 and Dit953, or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toefl, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "-Describe and describe how computer graphics are implemented, using a high-level program language and a typical graphics api such as OpenGL, for example 3D games and film.\n- account for and describe the fundamental algorithms used to create 3D graphics in games and film\n- To some extent, explain how the current graphics hardware architecture is designed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- implement algorithms used to create real -time rendering and to some extent photorealistic rendering\n- apply the functionality of graphics hardware via programming intersface\n- Apply some basic mathematics used to solve certain relevant sub -problems in computer graphics, such as intersection calculations, lighting calculations, object transformations and radiation follow -up.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- describe fundamental algorithms within 3D graphics and be able to distinguish them based on suitability and efficiency\n- Choosing appropriate algorithms, data structures and mathematical solution methods for specific problems in computer graphics.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course aims to provide broad knowledge of algorithms for 3D graphics as well as experience in implementing basic 3D graphics techniques.\n\nThe course provides knowledge about the principles used to create images using computer algorithms.Primary focus is on real -time rendering and photorealist rendering.\n\nThe first part of the course includes real -time rendering, where techniques and data structures for eg lighting, texture, special effects, shadows and reflections will be studied.The design of graphics hardware and upset algorithms will also be treated.\n\nThe second part of the course focuses on how to generate photo -realistic images which includes algorithms for Ray Tracing and Global Illumination.Overall, the course gives\n\nExplanation for and some ability to apply the associated mathematics at the basic level, such as object and camera transformations, light-material interaction and intersection test.For this, linear algebra is used.The course contains some programming compounds that provide students with practical skills on programming of 3D graphics.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Written exam (Written Exam), 6 HP\n\nRating scale: well approved (vg), approved (g) and failed (u)\n\n2. Laboratory (Laboratory Work), 1.5 credits rating scale: approved (g) and failed (U)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "The course is organized in lectures and exercises.In the exercises, the student implements 3D graphics algorithms using C ++.The student is not expected to have prior knowledge in C ++, but in some modern high -level language, such as Java.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through a written examination and through approved laboratory work.The laboratory is performed individually or in pairs.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades well approved (VG), approved (G) and failed (U).For an approved grade on full course, approved grade is required for all sub -courses.In order to get the grade well approved (VG) on the course, in addition, the grade is well approved for the sub -course written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit223 Computer Bornek K, 7.5 credits.This course cannot be included in a degree containing there223.Nor can it be part of a degree based on another degree that includes 223.\n\nIt is recommended that the student has 7.5 credits in linear algebra (MMGD20 or equivalent) but not strict requirements.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT224.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit743 Calculation methods in bioinformatics, 7.5 higher education credits", "content": "Computational methods in bioinformatics, 7.5 credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2020-12-18 and most recently revised 2022-11-15.The revised syllabus is valid from 202308-28, autumn term 2023.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is offered within several programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Mathematical Sciences, Master Program (N2MAT) and 4) Applied Data Science Master Program (N2ADS)\n\nMain area\n\nRecess\n\nComputer science\n\nA1f, advanced level, has course/s at advanced level as prerequisites\n\nData science\n\nA1f, advanced level, has course/s at advanced level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "Access to the course requires 60 approved higher education credits in computer science, software technology, data science, mathematics, mathematical statistics, or equivalent.A programming course (D) (DR012 imperative programming with basic object orientation, DR042 Object -oriented programming, DR) functional programming, or equivalent) and a basic course in discreet\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toefl, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- describe and summarize problems that have been raised in bioinformatics literature, and calculation methods to solve them", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- design and implement calculation problems in bioinformatics", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Critically discuss different bioinformatics methods that address the same task or related tasks and discuss differences in the assignments tasks or differences in the calculation methods\n- Identify situations where the same calculation methods are applied when dealing with different problems, even in different application areas", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "This course shows how calculation methods that are traditionally presented in computer science courses can also be applied within an applied area: bioinformatics.\n\nWe deal with problems that arise in connection with the analysis of biological data sequences (sequential bioinformatics) and macromolecular structures (structural bioinformatics).As a computer scientist, one must be able to identify and understand problems with origin in areas that are not considered direct computer technical or computer science, and identify computer science methods needed to manage them.The course also introduces concepts in biology required to understand the problems arising.\n\nReading scientific articles is valuable education for all scientists and researchers.Developing one's ability to read scientific articles is useful preparation for future scientific studies, and one's own scientific writing can\n\nAt the same time improving.In this course, therefore, research articles are used as most important reference materials, especially to show how to present ideas and methods, and how to critically evaluate them.\n\nSuch calculation methods and concepts presented in the course are: dynamic programming, heuristic algorithms, graph partitioning, image skeletonization, equalization and edge detection, clustering, undermatrism matching, geometric hashnin, Constraint logic programming, Monte carlo-optimization.\n\nAmong the problems taken from biology are: sequence inpass, domain allocation, comparison of structures, comparative modeling, protein wrap, Fold recognition, discover channels, molecular scocks, proteindesign.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Submission tasks (assignments), 7.5 credits\n\nRating scale: very well approved (5), well approved (4), approved (3) and\n\n- failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Lectures and programming exercises.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through individual assignments in programming and written assignments.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3)\n\nand failed (U).\n\nThe course gives some of the grades failed (U), 3, 4 or 5.\n\nIn order to get approved on the course, all compulsory elements must be approved.To get a higher grade than approved, a higher weight is required on the compulsory elements.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nIt is recommended to have read a basic course in data structures.Knowledge in basic chemistry (atoms and molecules and chemical binding) is useful.\n\nThe course replaces the course DR741 Calculation methods in bioinformatics, 7.5 credits.This course cannot be included in a degree containing there 741.Nor can it be part of a degree based on another degree that includes 741.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT743.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Data and information technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit240 Distributed Systems, 7.5 higher education credits", "content": "Distributed Systems, 7.5 Credits Advanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the IT Faculty Board 2009-09-15 and most recently revised 201706-16 by the Department of Computer and Information Technology.The revised syllabus is valid from 2017-08-20, autumn term 2017.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Data and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is part of Computer Science Master's program and is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS) and 3) Applied Data Science Master Program (N2ADS)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Main area", "content": "Recess\n\nComputer Science-Networks And\n\nDistributed Systems\n\nAXX, advanced level, course that cannot be classified", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Prerequisites", "content": "The prerequisites for the course are;cleared courses of 120 credits in the subject of computer science or equivalent, including the following courses;\n\n- Dit663 Computer Networks, 7.5 credits or Dit420 Computer Communication, 7.5 credits (or equivalent).\n- Dit400 operating systems, 7.5 credits or there390 Concurrent programming, 7.5 credits (or equivalent).\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from an internationally recognized test, such as Toefl, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Learning goals", "content": "After completing the course, the student is expected to be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Knowledge and understanding", "content": "- Apply basic concepts in distributed systems and its challenges, naming and synchronization of systems, texture, replication and fault tolerance in distributed systems.\n- Describe applications within distributed systems and the mechanisms they use to perform services.\n- Discuss and analyze the challenges and requirements that different approaches impose.\n- compare and summarize strengths and weaknesses associated with different mechanisms", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Skills and ability", "content": "- Develop and evaluate small -scale distributed systems using basic mechanisms.\n- Demonstrate developed software that can work in advanced systems with eg.Unreliable communication channels and systems as well as limited bands width.\n- Demonstrate results from experiments through oral and written presentation.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Valuation and attitude", "content": "- Describe and analyze both existing and new methods for designing distributed systems.Especially with respect to the system's ability to scale and be vomit tolerant · discuss and evaluate social- and ethical aspects of distributed systems and\n- Application of them.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Content", "content": "The course begins with an introduction of basic concepts for distributed systems and the challenges they face.In the course, basic knowledge of communication systems and operational systems is repeated.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "The main content of the course:", "content": "1. Naming\n2. Mutual exclusion (Mutual Exclusion) and Val (Election)\n3. Clocks and time\n4. Consistence and replication\n5. Fel tolerance in distributed systems\n6. Selected representative distributed applications.\n\nThe lessons provide students with the necessary theoretical knowledge and the laboratory practicality provides experience in developing distributed systems with reality -related problems\n\nThe course involves practical analysis work and laboratory work that increases the understanding of both concepts and real problems.The overall goal is to understand fundamental characteristics and problems in the design of distributed systems after the course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Sub -courses", "content": "- 1.\n\n- exam (writen exam), 6 credits\n\nRating scale: well approved (vg), approved (g) and failed (u)\n\n2. Laboratory (Laboratory Work), 1.5 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Forms of teaching", "content": "Lectures, home tasks, laboratory work.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Forms of assessment", "content": "The course is examined based on:\n\n- Written exam performed individually in an exam room (6.0 credits).\n- and home submission tasks and laboratory, both are carried out in groups of two (a total of 1.5 credits) and presented in both written and oral form.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Rating", "content": "The course gives any of the grades well approved (VG), approved (G) and failed (U).\n\nIn order to receive the grade approved (G) for the entire course, the students must have reached the grade approved at both sub -courses.\n\nIn order to obtain the grade well approved (VG) for the entire course, the students must have reached the grade well approved on the sub -course exam and achieved the grade approved at the laboratory course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 17, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 18, "heading": "Other", "content": "The course is a collective course with Chalmers.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT240.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit493 Graphic interfaces, 7.5 higher education credits", "content": "Graphical Interfaces, 7.5 Credits Advanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2022-12-09 to apply from 2023-08-28, autumn term 2023.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution:\n\nDepartment of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is offered within several educational programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS) and 3) Applied Data Science Master Program (N2ADS)\n\nMain area\n\nRecess\n\nComputer science\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites\n\nInteraction design\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "To be eligible for the course, the student must have a bachelor's degree of 180 credits.In addition, the course is required 1096 Human - Computer Interaction, 7.5 credits, or the equivalent.\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toelf, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Knowledge and understanding", "content": "- determine when and how different graphic elements in interface\n- decide how to use keypaths and scenarios to create an interaction sequence\n- Using common methods to solve design problems in a graphic interface\n- Design for an existing user interface, and decide which parts of the existing design solutions need to be changed and in what way", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Skills and ability", "content": "- Design graphic user interface for a specified user situation and user group with regard to: layout, interaction sequence, correct use of components and visual style\n- Design interface that is manipulated via mouse and keyboard\n- Design interface for touch-based interaction\n- Oral and brief in writing to present a design solution and motivate the design decision\n- Evaluate usability and User Upplevsle in Graphic User Interface", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Valuation and attitude", "content": "- solve interaction design problems regarding graphic interfaces and be able to justify the solution\n- design a relatively complex graphical interface and be able to justify its function, appearance and behavior\n- be able to select the best of several possible solutions and apply them\n- be able to start from a scenario and from this formulate the user's needs", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Content", "content": "The most important parts of the content are as follows:\n\n- Common solutions to various interaction-related problems in graphic interfaces\n- How a meeting users users at different levels, such as both beginners and experts\n- design of interaction sequences\n- layout of a graphic interface\n- to design (look & amp; feel), ie the use of color, text and graphics\n- What different types of components there are (for example buttons, menus, windows, toolboxes etc etc) and how and when to be used\n- the difference between \"ordinary\" graphic interfaces and touch interfaces", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Sub -courses", "content": "1. Project (Project), 4 credits\n\nRating scale: approved (g) and failed (u)\n\n2. Laboratory (Laboratory Work), 1.5 credits\n\nRating scale: approved (g) and failed (u)\n\n3. Home exam (Take Home Examination), 2 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of teaching", "content": "The course is practical in nature.Lectures and literature provide a theoretical basis to stand on, but this theory is applied directly to concrete design problems.During exercises and projects, the focus is on thinking about and analyzing their design decisions.A large part of the work is done in small and large groups, but a larger individual project is also carried out.The group project is implemented as a role -playing game with internal or external client as a stakeholder.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Forms of assessment", "content": "The course examined in three ways:\n\n- Group exercise, (U, G)\n- Home Tenta, (U, G)\n- individual project, (u, g)\n\nTo pass the course, one must clear all the steps.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Rating", "content": "The course gives any of the grades approved (G) and failed (U).In order to get approved on the course, all compulsory elements must be approved.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 17, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course TIA106, 7.5 credits.This course cannot be included in a degree containing TIA106.Nor can it be part of a degree based on another degree where TIA106 is included.\n\nIt is recommended that the students carry out the course TIA108 Prototyping in\n\nInteraction design.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT493.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit313 Calculationability, 7.5 higher education credits", "content": "Computability, 7.5 Credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2021-11-15 to apply from 2022-08-29, autumn term 2022.\n\nArea of Education: Natural Science 100 % Responsible Institutions: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is offered within several educational programs.It is also given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer Science Program (N1COS) and 2) Computer Science, Master's Program (N2COS)\n\nMain area\n\nRecess\n\nComputer science\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Prerequisites", "content": "For access to the course, the student must have at least 120 credits in computer science or equivalent.Specifically, the following courses, or equivalent: - 7.5 credits in discrete mathematics (eg, 1980 Discrete mathematics for computer scientists) - 7.5 credits in functional programming (eg, 143 Functional programming or DR) introduction to functional programming)\n\nThe following level of knowledge in English is required;English 6/English B or equivalent from a recognized international test, e.g.Toefl, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Learning goals", "content": "After approved course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Knowledge and understanding", "content": "- define the concept of computable function,\n- Explain Church-TURINGS hypothesis,\n- Explain the relationship between inductively defined quantities, primitive recursion, and the method of evidence structural induction,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Skills and ability", "content": "- prove that quantities are insistent or in -house, for example by using diagonalization,\n- Code inductively defined quantities in such a way that elements in these quantities can be used as input or output for programs in one or more calculation models,\n- implement programs, in particular interpreters, correctly in one or more calculation models,\n- Prove that features are or are not computable in any calculation models,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Valuation and attitude", "content": "- Analyze programs belong to some calculation models, and\n- Manipulate and analyze calculation models.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Content", "content": "The course is about calculations: how they can be modeled, and what can be calculated.To avoid unnecessary complications, one often chooses to study calculations through simplified, but powerful, models.For example, these models can be simple programming languages (such as -calculation), or idealized computers (as Turing machines).The course deals with several such models, both \"imperative\" and \"functional\".\n\nOne or more models will be used to explore the limits of what can be calculated: problems that cannot be solved (within a particular model framework), and programs that can run arbitrary programs (modeled in a certain way).\n\nThe course also contains a discussion of Church-TURING's hypothesis, a presumption that a function is computable in a certain intuitive way only if it can be defined in one of several calculation models.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Sub -courses", "content": "1. Written exam (Written Examination), 4.5 credits rating scale: very well approved (5), well approved (4), approved (3) and\n\nRating scale: very well approved (5), well approved (4), approved (3) and\n\nFailed (u)\n\n- 2.\n\n- submission tasks (assignments), 3 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Forms of teaching", "content": "Lectures and exercises.\n\nLanguage Language: English", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of assessment", "content": "The course is examined through an individual written examination and individual assignments.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Rating", "content": "The course gives any of the grades very well approved (5), well approved (4), approved (3) and failed (U).\n\nTo get one of the grades 5, 4 or 3, you must receive the grade G on the sub -course assignments, and partly that you get approved results (5, 4 or 3) on the sub -course written hall.In that case, the grade on the entire course is the grade on the sub -course written hall exam.Otherwise, the grade on the entire course is U (failed).", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by the fact that\n\nShow on parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Other", "content": "The course is collected with Chalmers.\n\nCourse literature will be published no later than 8 weeks before the course starts.\n\nThe course replaces the course Dit312, 7.5 credits.This course cannot be included in a degree containing there312.Nor can it be part of a degree based on another degree that includes 312.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT313.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Department of Computer and Information Technology", "content": "<!-Image->", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 2, "heading": "Dit231 Program language technology, 7.5 higher education credits", "content": "Programming Language Technology, 7.5 Credits\n\nAdvanced Level / Second Cycle", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 3, "heading": "Determination", "content": "The syllabus is established by the Department of Computer and Information Technology 2012-11-12 and last revised 2019-02-07.The revised syllabus is valid from 201909-02, autumn term 2019.\n\nArea of Education: Natural Science 100 %\n\nResponsible institution: Department of Computer and Information Technology", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 4, "heading": "Placement", "content": "The course is part of Computer Science Master's program and is given as a standalone course at the University of Gothenburg.\n\nThe course may be included in the following programs: 1) Computer science program (N1COS), 2) Computer Science, Master's Program (N2COS), 3) Software Engineering Master's Program (N2Som) and 4) Applied Data Science Master Program (N2ADS)\n\nMain area", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 5, "heading": "Recess", "content": "Software Engineering\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites\n\nComputer Science-Algorithms and Logic\n\nA1n, Advanced Level, has only course/ER at basic level as prerequisites", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 6, "heading": "Prerequisites", "content": "Prerequisites for the course are completed courses of 60 credits in the subject of computer science including:\n\n- 7.5 credits Programming (for example, DR) Functional Programming, DRA953 Object -oriented Programming and Design or equivalent)\n- 7.5 credits Data structures (for example DR there961 Data structures, DRA 725 Logic, algorithms and data structures or equivalent)\n\nEnglish 6/English B or present the corresponding level of knowledge through an internationally recognized language test such as Toefl, IELTS.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 7, "heading": "Learning goals", "content": "After completing the course, the student should be able to:", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 8, "heading": "Knowledge and understanding", "content": "- Explain basic implementation problems for both imperative and functional languages,\n- Explain the principles of LL and LR pairs,\n- Explain how finite vending machines work,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 9, "heading": "Skills and ability", "content": "- Define and implement abstract syntax,\n- Define Syntax for Programming Languages using context -free grammar and implement parsers using standard tools,\n- Design rules for operational semantics and implement interpreters for both imperative and functional languages,\n- Write simple code generators,\n- Apply the technology for syntax -controlled translation and how to implement for any programming language,\n- Formulate typeinference rules and implement type controllers for functional and imperative programming languages,\n- Design rules for operational semantic and implement interpreters for functional and imperative programming languages,", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 10, "heading": "Valuation and attitude", "content": "- reason about programming language design and make balances, for example, with regard to efficiency and usability.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 11, "heading": "Content", "content": "The purpose of the course is to create an understanding of how programming languages are designed, documented and implemented.The course deals with basic techniques and tools needed to implement interpreters (interpreters), and also provides an introduction to compilers.\n\nStudents will learn the program language grammar when they implement syntax analysis and about type system when implementing type controllers.By implementing interpreters and compilers, the student learns to solve practical implementation problems as well as the theory for formal semantics.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 12, "heading": "Sub -courses", "content": "1. The exam (Written Exam), 6 credits\n\n- rating scale: well approved (VG), approved (g) and failed (U)\n\n2. Laborations (Laboratory), 1.5 credits\n\nRating scale: approved (g) and failed (u)", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 13, "heading": "Forms of teaching", "content": "Teaching is given in the form of lectures, exercises and laboratory work with individual guidance.\n\nLanguage Language:\n\nEnglish", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 14, "heading": "Forms of assessment", "content": "The course is examined through an individual written examination at the end of the course and laboratory work that is carried out individually or in pairs.\n\nIf a student who has been rejected twice at the same examination element wishes to change the examiner for the next examination occasion, such a request must be submitted in writing to the course responsible institution and approved if there are no special reasons, however (HF Chapter 6, section 22).\n\nIn the event that a course has ceased or undergone major changes, the student must normally be guaranteed access to at least three test cases (including regular test occasions) for a period of at least one year based on the course's previous arrangement.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 15, "heading": "Rating", "content": "The course gives any of the grades well approved (VG), approved (G) and failed (U).In order to obtain a well -approved (VG) for the entire course, the student must be approved at the part of the laboratory work and received the grade well approved at the sub -written exam.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 16, "heading": "Course evaluation", "content": "The course is evaluated through meetings both during and after the course between teachers and student representatives.In addition, an anonymous questionnaire is used to receive written information.The result of the evaluation is used to improve the course by showing parts that can be added, improved, changed or removed.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 17, "heading": "Other", "content": "The course replaces DRA230 Programming Languages.The course cannot be included in a degree containing there 230.Nor can the course be included in a degree based on another degree where 230 is included.\n\nThe course cannot be included in a degree containing there229.Nor can the course be included in a degree based on another degree which includes the course DR229.\n\nThe course is collected with Chalmers.\n\nCourse Literature to Be Announced The Latest 8 Weeks Prior to the Start of the Course.", "origin_link": "https://kursplaner.gu.se/pdf/kurs/sv/DIT231.pdf", "external_links": [], "last_updated": "2025-07-17"}
{"section": 1, "heading": "Mandatory courses", "content": "Mandatory courses in the table below are displayed an overview of compulsory courses for computer science bachelor's programs.", "origin_link": "https://www.gu.se/studera/hitta-utbildning/n1cos-obligatoriska-kurser", "external_links": [], "last_updated": "13 juli 2025"}
